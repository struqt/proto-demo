// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: struqt/common/v1/common.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_struqt_2fcommon_2fv1_2fcommon_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_struqt_2fcommon_2fv1_2fcommon_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_struqt_2fcommon_2fv1_2fcommon_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_struqt_2fcommon_2fv1_2fcommon_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_struqt_2fcommon_2fv1_2fcommon_2eproto;
namespace struqt {
namespace common {
namespace v1 {
class Dummy;
struct DummyDefaultTypeInternal;
extern DummyDefaultTypeInternal _Dummy_default_instance_;
class GetServerInfoRequest;
struct GetServerInfoRequestDefaultTypeInternal;
extern GetServerInfoRequestDefaultTypeInternal _GetServerInfoRequest_default_instance_;
class GetServerInfoResponse;
struct GetServerInfoResponseDefaultTypeInternal;
extern GetServerInfoResponseDefaultTypeInternal _GetServerInfoResponse_default_instance_;
}  // namespace v1
}  // namespace common
}  // namespace struqt
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace struqt {
namespace common {
namespace v1 {
enum ServerStatus : int {
  SERVER_STATUS_UNSPECIFIED = 0,
  SERVER_STATUS_INITIAL = 1,
  SERVER_STATUS_STARTING = 2,
  SERVER_STATUS_RUNNING = 3,
  SERVER_STATUS_SHUTDOWN = 4,
  ServerStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ServerStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ServerStatus_IsValid(int value);
constexpr ServerStatus ServerStatus_MIN = static_cast<ServerStatus>(0);
constexpr ServerStatus ServerStatus_MAX = static_cast<ServerStatus>(4);
constexpr int ServerStatus_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
ServerStatus_descriptor();
template <typename T>
const std::string& ServerStatus_Name(T value) {
  static_assert(std::is_same<T, ServerStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ServerStatus_Name().");
  return ServerStatus_Name(static_cast<ServerStatus>(value));
}
template <>
inline const std::string& ServerStatus_Name(ServerStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ServerStatus_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool ServerStatus_Parse(absl::string_view name, ServerStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerStatus>(
      ServerStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class GetServerInfoRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:struqt.common.v1.GetServerInfoRequest) */ {
 public:
  inline GetServerInfoRequest() : GetServerInfoRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetServerInfoRequest(::google::protobuf::internal::ConstantInitialized);

  GetServerInfoRequest(const GetServerInfoRequest& from);
  GetServerInfoRequest(GetServerInfoRequest&& from) noexcept
    : GetServerInfoRequest() {
    *this = ::std::move(from);
  }

  inline GetServerInfoRequest& operator=(const GetServerInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetServerInfoRequest& operator=(GetServerInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetServerInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetServerInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetServerInfoRequest*>(
               &_GetServerInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetServerInfoRequest& a, GetServerInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetServerInfoRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetServerInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetServerInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetServerInfoRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetServerInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetServerInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "struqt.common.v1.GetServerInfoRequest";
  }
  protected:
  explicit GetServerInfoRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:struqt.common.v1.GetServerInfoRequest)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_struqt_2fcommon_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class GetServerInfoResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:struqt.common.v1.GetServerInfoResponse) */ {
 public:
  inline GetServerInfoResponse() : GetServerInfoResponse(nullptr) {}
  ~GetServerInfoResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetServerInfoResponse(::google::protobuf::internal::ConstantInitialized);

  GetServerInfoResponse(const GetServerInfoResponse& from);
  GetServerInfoResponse(GetServerInfoResponse&& from) noexcept
    : GetServerInfoResponse() {
    *this = ::std::move(from);
  }

  inline GetServerInfoResponse& operator=(const GetServerInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetServerInfoResponse& operator=(GetServerInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetServerInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetServerInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetServerInfoResponse*>(
               &_GetServerInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetServerInfoResponse& a, GetServerInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetServerInfoResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetServerInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetServerInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetServerInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetServerInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetServerInfoResponse& from) {
    GetServerInfoResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetServerInfoResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "struqt.common.v1.GetServerInfoResponse";
  }
  protected:
  explicit GetServerInfoResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartedAtFieldNumber = 23,
    kTimestampFieldNumber = 25,
    kServerIdFieldNumber = 22,
    kStatusFieldNumber = 24,
  };
  // .google.protobuf.Timestamp started_at = 23 [(.google.api.field_behavior) = IMMUTABLE];
  bool has_started_at() const;
  void clear_started_at() ;
  const ::google::protobuf::Timestamp& started_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_started_at();
  ::google::protobuf::Timestamp* mutable_started_at();
  void set_allocated_started_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_started_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_started_at();

  private:
  const ::google::protobuf::Timestamp& _internal_started_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_started_at();

  public:
  // .google.protobuf.Timestamp timestamp = 25 [(.google.api.field_behavior) = REQUIRED];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_timestamp();

  public:
  // int32 server_id = 22 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.field_behavior) = REQUIRED];
  void clear_server_id() ;
  ::int32_t server_id() const;
  void set_server_id(::int32_t value);

  private:
  ::int32_t _internal_server_id() const;
  void _internal_set_server_id(::int32_t value);

  public:
  // .struqt.common.v1.ServerStatus status = 24 [(.google.api.field_behavior) = IMMUTABLE];
  void clear_status() ;
  ::struqt::common::v1::ServerStatus status() const;
  void set_status(::struqt::common::v1::ServerStatus value);

  private:
  ::struqt::common::v1::ServerStatus _internal_status() const;
  void _internal_set_status(::struqt::common::v1::ServerStatus value);

  public:
  // @@protoc_insertion_point(class_scope:struqt.common.v1.GetServerInfoResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* started_at_;
    ::google::protobuf::Timestamp* timestamp_;
    ::int32_t server_id_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_struqt_2fcommon_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class Dummy final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:struqt.common.v1.Dummy) */ {
 public:
  inline Dummy() : Dummy(nullptr) {}
  ~Dummy() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Dummy(::google::protobuf::internal::ConstantInitialized);

  Dummy(const Dummy& from);
  Dummy(Dummy&& from) noexcept
    : Dummy() {
    *this = ::std::move(from);
  }

  inline Dummy& operator=(const Dummy& from) {
    CopyFrom(from);
    return *this;
  }
  inline Dummy& operator=(Dummy&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Dummy& default_instance() {
    return *internal_default_instance();
  }
  static inline const Dummy* internal_default_instance() {
    return reinterpret_cast<const Dummy*>(
               &_Dummy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Dummy& a, Dummy& b) {
    a.Swap(&b);
  }
  inline void Swap(Dummy* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Dummy* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Dummy* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Dummy>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Dummy& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Dummy& from) {
    Dummy::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Dummy* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "struqt.common.v1.Dummy";
  }
  protected:
  explicit Dummy(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionTagFieldNumber = 2,
    kVersionFieldNumber = 1,
  };
  // string version_tag = 2;
  void clear_version_tag() ;
  const std::string& version_tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version_tag(Arg_&& arg, Args_... args);
  std::string* mutable_version_tag();
  PROTOBUF_NODISCARD std::string* release_version_tag();
  void set_allocated_version_tag(std::string* ptr);

  private:
  const std::string& _internal_version_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version_tag(
      const std::string& value);
  std::string* _internal_mutable_version_tag();

  public:
  // int32 version = 1;
  void clear_version() ;
  ::int32_t version() const;
  void set_version(::int32_t value);

  private:
  ::int32_t _internal_version() const;
  void _internal_set_version(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:struqt.common.v1.Dummy)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 42, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr version_tag_;
    ::int32_t version_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_struqt_2fcommon_2fv1_2fcommon_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetServerInfoRequest

// -------------------------------------------------------------------

// GetServerInfoResponse

// int32 server_id = 22 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.field_behavior) = REQUIRED];
inline void GetServerInfoResponse::clear_server_id() {
  _impl_.server_id_ = 0;
}
inline ::int32_t GetServerInfoResponse::server_id() const {
  // @@protoc_insertion_point(field_get:struqt.common.v1.GetServerInfoResponse.server_id)
  return _internal_server_id();
}
inline void GetServerInfoResponse::set_server_id(::int32_t value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:struqt.common.v1.GetServerInfoResponse.server_id)
}
inline ::int32_t GetServerInfoResponse::_internal_server_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.server_id_;
}
inline void GetServerInfoResponse::_internal_set_server_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.server_id_ = value;
}

// .google.protobuf.Timestamp started_at = 23 [(.google.api.field_behavior) = IMMUTABLE];
inline bool GetServerInfoResponse::has_started_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.started_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GetServerInfoResponse::_internal_started_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.started_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GetServerInfoResponse::started_at() const {
  // @@protoc_insertion_point(field_get:struqt.common.v1.GetServerInfoResponse.started_at)
  return _internal_started_at();
}
inline void GetServerInfoResponse::unsafe_arena_set_allocated_started_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.started_at_);
  }
  _impl_.started_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:struqt.common.v1.GetServerInfoResponse.started_at)
}
inline ::google::protobuf::Timestamp* GetServerInfoResponse::release_started_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.started_at_;
  _impl_.started_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* GetServerInfoResponse::unsafe_arena_release_started_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:struqt.common.v1.GetServerInfoResponse.started_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.started_at_;
  _impl_.started_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GetServerInfoResponse::_internal_mutable_started_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.started_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.started_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.started_at_;
}
inline ::google::protobuf::Timestamp* GetServerInfoResponse::mutable_started_at() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_started_at();
  // @@protoc_insertion_point(field_mutable:struqt.common.v1.GetServerInfoResponse.started_at)
  return _msg;
}
inline void GetServerInfoResponse::set_allocated_started_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.started_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.started_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:struqt.common.v1.GetServerInfoResponse.started_at)
}

// .struqt.common.v1.ServerStatus status = 24 [(.google.api.field_behavior) = IMMUTABLE];
inline void GetServerInfoResponse::clear_status() {
  _impl_.status_ = 0;
}
inline ::struqt::common::v1::ServerStatus GetServerInfoResponse::status() const {
  // @@protoc_insertion_point(field_get:struqt.common.v1.GetServerInfoResponse.status)
  return _internal_status();
}
inline void GetServerInfoResponse::set_status(::struqt::common::v1::ServerStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:struqt.common.v1.GetServerInfoResponse.status)
}
inline ::struqt::common::v1::ServerStatus GetServerInfoResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::struqt::common::v1::ServerStatus>(_impl_.status_);
}
inline void GetServerInfoResponse::_internal_set_status(::struqt::common::v1::ServerStatus value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// .google.protobuf.Timestamp timestamp = 25 [(.google.api.field_behavior) = REQUIRED];
inline bool GetServerInfoResponse::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GetServerInfoResponse::_internal_timestamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GetServerInfoResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:struqt.common.v1.GetServerInfoResponse.timestamp)
  return _internal_timestamp();
}
inline void GetServerInfoResponse::unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:struqt.common.v1.GetServerInfoResponse.timestamp)
}
inline ::google::protobuf::Timestamp* GetServerInfoResponse::release_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* GetServerInfoResponse::unsafe_arena_release_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:struqt.common.v1.GetServerInfoResponse.timestamp)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GetServerInfoResponse::_internal_mutable_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* GetServerInfoResponse::mutable_timestamp() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:struqt.common.v1.GetServerInfoResponse.timestamp)
  return _msg;
}
inline void GetServerInfoResponse::set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:struqt.common.v1.GetServerInfoResponse.timestamp)
}

// -------------------------------------------------------------------

// Dummy

// int32 version = 1;
inline void Dummy::clear_version() {
  _impl_.version_ = 0;
}
inline ::int32_t Dummy::version() const {
  // @@protoc_insertion_point(field_get:struqt.common.v1.Dummy.version)
  return _internal_version();
}
inline void Dummy::set_version(::int32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:struqt.common.v1.Dummy.version)
}
inline ::int32_t Dummy::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_;
}
inline void Dummy::_internal_set_version(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_ = value;
}

// string version_tag = 2;
inline void Dummy::clear_version_tag() {
  _impl_.version_tag_.ClearToEmpty();
}
inline const std::string& Dummy::version_tag() const {
  // @@protoc_insertion_point(field_get:struqt.common.v1.Dummy.version_tag)
  return _internal_version_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Dummy::set_version_tag(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_tag_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:struqt.common.v1.Dummy.version_tag)
}
inline std::string* Dummy::mutable_version_tag() {
  std::string* _s = _internal_mutable_version_tag();
  // @@protoc_insertion_point(field_mutable:struqt.common.v1.Dummy.version_tag)
  return _s;
}
inline const std::string& Dummy::_internal_version_tag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_tag_.Get();
}
inline void Dummy::_internal_set_version_tag(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_tag_.Set(value, GetArenaForAllocation());
}
inline std::string* Dummy::_internal_mutable_version_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.version_tag_.Mutable( GetArenaForAllocation());
}
inline std::string* Dummy::release_version_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:struqt.common.v1.Dummy.version_tag)
  return _impl_.version_tag_.Release();
}
inline void Dummy::set_allocated_version_tag(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_tag_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.version_tag_.IsDefault()) {
          _impl_.version_tag_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:struqt.common.v1.Dummy.version_tag)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace common
}  // namespace struqt


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::struqt::common::v1::ServerStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::struqt::common::v1::ServerStatus>() {
  return ::struqt::common::v1::ServerStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_struqt_2fcommon_2fv1_2fcommon_2eproto_2epb_2eh
