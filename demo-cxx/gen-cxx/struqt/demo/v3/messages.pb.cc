// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: struqt/demo/v3/messages.proto

#include "struqt/demo/v3/messages.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace struqt {
namespace demo {
namespace v3 {
template <typename>
PROTOBUF_CONSTEXPR EchoValueRequest::EchoValueRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.value_)*/nullptr} {}
struct EchoValueRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EchoValueRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EchoValueRequestDefaultTypeInternal() {}
  union {
    EchoValueRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EchoValueRequestDefaultTypeInternal _EchoValueRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR EchoValueResponse::EchoValueResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/nullptr
  , /*decltype(_impl_.pb3_message_)*/nullptr} {}
struct EchoValueResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EchoValueResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EchoValueResponseDefaultTypeInternal() {}
  union {
    EchoValueResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EchoValueResponseDefaultTypeInternal _EchoValueResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message_MapValueEntry_DoNotUse::Proto3Message_MapValueEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Proto3Message_MapValueEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3Message_MapValueEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3Message_MapValueEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Proto3Message_MapValueEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3Message_MapValueEntry_DoNotUseDefaultTypeInternal _Proto3Message_MapValueEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message_MapValue2Entry_DoNotUse::Proto3Message_MapValue2Entry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Proto3Message_MapValue2Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3Message_MapValue2Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3Message_MapValue2Entry_DoNotUseDefaultTypeInternal() {}
  union {
    Proto3Message_MapValue2Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3Message_MapValue2Entry_DoNotUseDefaultTypeInternal _Proto3Message_MapValue2Entry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message_MapValue3Entry_DoNotUse::Proto3Message_MapValue3Entry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Proto3Message_MapValue3Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3Message_MapValue3Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3Message_MapValue3Entry_DoNotUseDefaultTypeInternal() {}
  union {
    Proto3Message_MapValue3Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3Message_MapValue3Entry_DoNotUseDefaultTypeInternal _Proto3Message_MapValue3Entry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message_MapValue4Entry_DoNotUse::Proto3Message_MapValue4Entry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Proto3Message_MapValue4Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3Message_MapValue4Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3Message_MapValue4Entry_DoNotUseDefaultTypeInternal() {}
  union {
    Proto3Message_MapValue4Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3Message_MapValue4Entry_DoNotUseDefaultTypeInternal _Proto3Message_MapValue4Entry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message_MapValue5Entry_DoNotUse::Proto3Message_MapValue5Entry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Proto3Message_MapValue5Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3Message_MapValue5Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3Message_MapValue5Entry_DoNotUseDefaultTypeInternal() {}
  union {
    Proto3Message_MapValue5Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3Message_MapValue5Entry_DoNotUseDefaultTypeInternal _Proto3Message_MapValue5Entry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message_MapValue6Entry_DoNotUse::Proto3Message_MapValue6Entry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Proto3Message_MapValue6Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3Message_MapValue6Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3Message_MapValue6Entry_DoNotUseDefaultTypeInternal() {}
  union {
    Proto3Message_MapValue6Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3Message_MapValue6Entry_DoNotUseDefaultTypeInternal _Proto3Message_MapValue6Entry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message_MapValue7Entry_DoNotUse::Proto3Message_MapValue7Entry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Proto3Message_MapValue7Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3Message_MapValue7Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3Message_MapValue7Entry_DoNotUseDefaultTypeInternal() {}
  union {
    Proto3Message_MapValue7Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3Message_MapValue7Entry_DoNotUseDefaultTypeInternal _Proto3Message_MapValue7Entry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message_MapValue8Entry_DoNotUse::Proto3Message_MapValue8Entry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Proto3Message_MapValue8Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3Message_MapValue8Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3Message_MapValue8Entry_DoNotUseDefaultTypeInternal() {}
  union {
    Proto3Message_MapValue8Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3Message_MapValue8Entry_DoNotUseDefaultTypeInternal _Proto3Message_MapValue8Entry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message_MapValue9Entry_DoNotUse::Proto3Message_MapValue9Entry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Proto3Message_MapValue9Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3Message_MapValue9Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3Message_MapValue9Entry_DoNotUseDefaultTypeInternal() {}
  union {
    Proto3Message_MapValue9Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3Message_MapValue9Entry_DoNotUseDefaultTypeInternal _Proto3Message_MapValue9Entry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message_MapValue10Entry_DoNotUse::Proto3Message_MapValue10Entry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Proto3Message_MapValue10Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3Message_MapValue10Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3Message_MapValue10Entry_DoNotUseDefaultTypeInternal() {}
  union {
    Proto3Message_MapValue10Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3Message_MapValue10Entry_DoNotUseDefaultTypeInternal _Proto3Message_MapValue10Entry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message_MapValue12Entry_DoNotUse::Proto3Message_MapValue12Entry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Proto3Message_MapValue12Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3Message_MapValue12Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3Message_MapValue12Entry_DoNotUseDefaultTypeInternal() {}
  union {
    Proto3Message_MapValue12Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3Message_MapValue12Entry_DoNotUseDefaultTypeInternal _Proto3Message_MapValue12Entry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message_MapValue14Entry_DoNotUse::Proto3Message_MapValue14Entry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Proto3Message_MapValue14Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3Message_MapValue14Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3Message_MapValue14Entry_DoNotUseDefaultTypeInternal() {}
  union {
    Proto3Message_MapValue14Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3Message_MapValue14Entry_DoNotUseDefaultTypeInternal _Proto3Message_MapValue14Entry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message_MapValue15Entry_DoNotUse::Proto3Message_MapValue15Entry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Proto3Message_MapValue15Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3Message_MapValue15Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3Message_MapValue15Entry_DoNotUseDefaultTypeInternal() {}
  union {
    Proto3Message_MapValue15Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3Message_MapValue15Entry_DoNotUseDefaultTypeInternal _Proto3Message_MapValue15Entry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message_MapValue16Entry_DoNotUse::Proto3Message_MapValue16Entry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Proto3Message_MapValue16Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3Message_MapValue16Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3Message_MapValue16Entry_DoNotUseDefaultTypeInternal() {}
  union {
    Proto3Message_MapValue16Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3Message_MapValue16Entry_DoNotUseDefaultTypeInternal _Proto3Message_MapValue16Entry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Proto3Message::Proto3Message(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.repeated_value_)*/{}
  , /*decltype(_impl_.repeated_enum_)*/ {}
  , /*decltype(_impl_._repeated_enum_cached_byte_size_)*/ { 0 }

  , /*decltype(_impl_.map_value_)*/{}
  , /*decltype(_impl_.map_value2_)*/{}
  , /*decltype(_impl_.map_value3_)*/{}
  , /*decltype(_impl_.map_value4_)*/{}
  , /*decltype(_impl_.map_value5_)*/{}
  , /*decltype(_impl_.map_value6_)*/{}
  , /*decltype(_impl_.map_value7_)*/{}
  , /*decltype(_impl_.map_value8_)*/{}
  , /*decltype(_impl_.map_value9_)*/{}
  , /*decltype(_impl_.map_value10_)*/{}
  , /*decltype(_impl_.map_value12_)*/{}
  , /*decltype(_impl_.map_value14_)*/{}
  , /*decltype(_impl_.map_value15_)*/{}
  , /*decltype(_impl_.repeated_message_)*/{}
  , /*decltype(_impl_.map_value16_)*/{}
  , /*decltype(_impl_.string_value_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.bytes_value_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.timestamp_value_)*/nullptr
  , /*decltype(_impl_.duration_value_)*/nullptr
  , /*decltype(_impl_.field_mask_value_)*/nullptr
  , /*decltype(_impl_.wrapper_double_value_)*/nullptr
  , /*decltype(_impl_.wrapper_float_value_)*/nullptr
  , /*decltype(_impl_.wrapper_int64_value_)*/nullptr
  , /*decltype(_impl_.wrapper_int32_value_)*/nullptr
  , /*decltype(_impl_.wrapper_u_int64_value_)*/nullptr
  , /*decltype(_impl_.wrapper_u_int32_value_)*/nullptr
  , /*decltype(_impl_.wrapper_bool_value_)*/nullptr
  , /*decltype(_impl_.wrapper_string_value_)*/nullptr
  , /*decltype(_impl_.wrapper_bytes_value_)*/nullptr
  , /*decltype(_impl_.nested_)*/nullptr
  , /*decltype(_impl_.struct_value_value_)*/nullptr
  , /*decltype(_impl_.struct_value_)*/nullptr
  , /*decltype(_impl_.int64_value_)*/ ::int64_t{0}

  , /*decltype(_impl_.uint64_value_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.int32_value_)*/ 0

  , /*decltype(_impl_.uint32_value_)*/ 0u

  , /*decltype(_impl_.bool_value_)*/ false

  , /*decltype(_impl_.enum_value_)*/ 0

  , /*decltype(_impl_.double_value_)*/ 0

  , /*decltype(_impl_.float_value_)*/ 0

  , /*decltype(_impl_.oneof_value_)*/{}
  , /*decltype(_impl_.nested_oneof_value_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct Proto3MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proto3MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proto3MessageDefaultTypeInternal() {}
  union {
    Proto3Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proto3MessageDefaultTypeInternal _Proto3Message_default_instance_;
}  // namespace v3
}  // namespace demo
}  // namespace struqt
static ::_pb::Metadata file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[17];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_struqt_2fdemo_2fv3_2fmessages_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_struqt_2fdemo_2fv3_2fmessages_2eproto = nullptr;
const ::uint32_t TableStruct_struqt_2fdemo_2fv3_2fmessages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::EchoValueRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::EchoValueRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::EchoValueRequest, _impl_.value_),
    0,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::EchoValueResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::EchoValueResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::EchoValueResponse, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::EchoValueResponse, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::EchoValueResponse, _impl_.pb3_message_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValueEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValueEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValueEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValueEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue2Entry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue2Entry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue2Entry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue2Entry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue3Entry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue3Entry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue3Entry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue3Entry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue4Entry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue4Entry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue4Entry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue4Entry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue5Entry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue5Entry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue5Entry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue5Entry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue6Entry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue6Entry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue6Entry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue6Entry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue7Entry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue7Entry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue7Entry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue7Entry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue8Entry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue8Entry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue8Entry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue8Entry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue9Entry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue9Entry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue9Entry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue9Entry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue10Entry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue10Entry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue10Entry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue10Entry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue12Entry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue12Entry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue12Entry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue12Entry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue14Entry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue14Entry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue14Entry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue14Entry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue15Entry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue15Entry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue15Entry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue15Entry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue16Entry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue16Entry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue16Entry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message_MapValue16Entry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.nested_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.float_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.double_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.int64_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.int32_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.uint64_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.uint32_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.bool_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.string_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.bytes_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.repeated_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.repeated_message_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.enum_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.repeated_enum_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.timestamp_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.duration_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.field_mask_value_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.wrapper_double_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.wrapper_float_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.wrapper_int64_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.wrapper_int32_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.wrapper_u_int64_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.wrapper_u_int32_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.wrapper_bool_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.wrapper_string_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.wrapper_bytes_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.map_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.map_value2_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.map_value3_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.map_value4_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.map_value5_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.map_value6_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.map_value7_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.map_value8_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.map_value9_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.map_value10_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.map_value12_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.map_value14_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.map_value15_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.map_value16_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.struct_value_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.struct_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.oneof_value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_.nested_oneof_value_),
    12,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    2,
    ~0u,
    ~0u,
    ~0u,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    13,
    14,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 9, -1, sizeof(::struqt::demo::v3::EchoValueRequest)},
        { 10, 21, -1, sizeof(::struqt::demo::v3::EchoValueResponse)},
        { 24, 34, -1, sizeof(::struqt::demo::v3::Proto3Message_MapValueEntry_DoNotUse)},
        { 36, 46, -1, sizeof(::struqt::demo::v3::Proto3Message_MapValue2Entry_DoNotUse)},
        { 48, 58, -1, sizeof(::struqt::demo::v3::Proto3Message_MapValue3Entry_DoNotUse)},
        { 60, 70, -1, sizeof(::struqt::demo::v3::Proto3Message_MapValue4Entry_DoNotUse)},
        { 72, 82, -1, sizeof(::struqt::demo::v3::Proto3Message_MapValue5Entry_DoNotUse)},
        { 84, 94, -1, sizeof(::struqt::demo::v3::Proto3Message_MapValue6Entry_DoNotUse)},
        { 96, 106, -1, sizeof(::struqt::demo::v3::Proto3Message_MapValue7Entry_DoNotUse)},
        { 108, 118, -1, sizeof(::struqt::demo::v3::Proto3Message_MapValue8Entry_DoNotUse)},
        { 120, 130, -1, sizeof(::struqt::demo::v3::Proto3Message_MapValue9Entry_DoNotUse)},
        { 132, 142, -1, sizeof(::struqt::demo::v3::Proto3Message_MapValue10Entry_DoNotUse)},
        { 144, 154, -1, sizeof(::struqt::demo::v3::Proto3Message_MapValue12Entry_DoNotUse)},
        { 156, 166, -1, sizeof(::struqt::demo::v3::Proto3Message_MapValue14Entry_DoNotUse)},
        { 168, 178, -1, sizeof(::struqt::demo::v3::Proto3Message_MapValue15Entry_DoNotUse)},
        { 180, 190, -1, sizeof(::struqt::demo::v3::Proto3Message_MapValue16Entry_DoNotUse)},
        { 192, 247, -1, sizeof(::struqt::demo::v3::Proto3Message)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::struqt::demo::v3::_EchoValueRequest_default_instance_._instance,
    &::struqt::demo::v3::_EchoValueResponse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_MapValueEntry_DoNotUse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_MapValue2Entry_DoNotUse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_MapValue3Entry_DoNotUse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_MapValue4Entry_DoNotUse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_MapValue5Entry_DoNotUse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_MapValue6Entry_DoNotUse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_MapValue7Entry_DoNotUse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_MapValue8Entry_DoNotUse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_MapValue9Entry_DoNotUse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_MapValue10Entry_DoNotUse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_MapValue12Entry_DoNotUse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_MapValue14Entry_DoNotUse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_MapValue15Entry_DoNotUse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_MapValue16Entry_DoNotUse_default_instance_._instance,
    &::struqt::demo::v3::_Proto3Message_default_instance_._instance,
};
const char descriptor_table_protodef_struqt_2fdemo_2fv3_2fmessages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\035struqt/demo/v3/messages.proto\022\016struqt."
    "demo.v3\032\036google/protobuf/duration.proto\032"
    " google/protobuf/field_mask.proto\032\034googl"
    "e/protobuf/struct.proto\032\037google/protobuf"
    "/timestamp.proto\032\036google/protobuf/wrappe"
    "rs.proto\"9\n\020EchoValueRequest\022%\n\005value\030\001 "
    "\001(\0132\026.google.protobuf.Value\"\235\001\n\021EchoValu"
    "eResponse\022%\n\005value\030\001 \001(\0132\026.google.protob"
    "uf.Value\022-\n\ttimestamp\030\002 \001(\0132\032.google.pro"
    "tobuf.Timestamp\0222\n\013pb3_message\030\003 \001(\0132\035.s"
    "truqt.demo.v3.Proto3Message\"\344\027\n\rProto3Me"
    "ssage\022-\n\006nested\030) \001(\0132\035.struqt.demo.v3.P"
    "roto3Message\022\023\n\013float_value\030* \001(\002\022\024\n\014dou"
    "ble_value\030+ \001(\001\022\023\n\013int64_value\030\003 \001(\003\022\023\n\013"
    "int32_value\030\004 \001(\005\022\024\n\014uint64_value\030\005 \001(\004\022"
    "\024\n\014uint32_value\030\006 \001(\r\022\022\n\nbool_value\030\007 \001("
    "\010\022\024\n\014string_value\030\010 \001(\t\022\023\n\013bytes_value\030\t"
    " \001(\014\022\026\n\016repeated_value\030\n \003(\t\0226\n\020repeated"
    "_message\030, \003(\0132\034.google.protobuf.UInt64V"
    "alue\022-\n\nenum_value\030\013 \001(\0162\031.struqt.demo.v"
    "3.EnumValue\0220\n\rrepeated_enum\030\014 \003(\0162\031.str"
    "uqt.demo.v3.EnumValue\0223\n\017timestamp_value"
    "\030\r \001(\0132\032.google.protobuf.Timestamp\0221\n\016du"
    "ration_value\030\016 \001(\0132\031.google.protobuf.Dur"
    "ation\0224\n\020field_mask_value\030\017 \001(\0132\032.google"
    ".protobuf.FieldMask\022\032\n\020oneof_bool_value\030"
    "\001 \001(\010H\000\022\034\n\022oneof_string_value\030\002 \001(\tH\000\022\?\n"
    "\026nested_oneof_value_one\030. \001(\0132\035.struqt.d"
    "emo.v3.Proto3MessageH\001\022:\n\024wrapper_double"
    "_value\030\021 \001(\0132\034.google.protobuf.DoubleVal"
    "ue\0228\n\023wrapper_float_value\030\022 \001(\0132\033.google"
    ".protobuf.FloatValue\0228\n\023wrapper_int64_va"
    "lue\030\023 \001(\0132\033.google.protobuf.Int64Value\0228"
    "\n\023wrapper_int32_value\030\024 \001(\0132\033.google.pro"
    "tobuf.Int32Value\022;\n\025wrapper_u_int64_valu"
    "e\030\025 \001(\0132\034.google.protobuf.UInt64Value\022;\n"
    "\025wrapper_u_int32_value\030\026 \001(\0132\034.google.pr"
    "otobuf.UInt32Value\0226\n\022wrapper_bool_value"
    "\030\027 \001(\0132\032.google.protobuf.BoolValue\022:\n\024wr"
    "apper_string_value\030\030 \001(\0132\034.google.protob"
    "uf.StringValue\0228\n\023wrapper_bytes_value\030\031 "
    "\001(\0132\033.google.protobuf.BytesValue\022>\n\tmap_"
    "value\030\032 \003(\0132+.struqt.demo.v3.Proto3Messa"
    "ge.MapValueEntry\022@\n\nmap_value2\030\033 \003(\0132,.s"
    "truqt.demo.v3.Proto3Message.MapValue2Ent"
    "ry\022@\n\nmap_value3\030\034 \003(\0132,.struqt.demo.v3."
    "Proto3Message.MapValue3Entry\022@\n\nmap_valu"
    "e4\030\035 \003(\0132,.struqt.demo.v3.Proto3Message."
    "MapValue4Entry\022@\n\nmap_value5\030\036 \003(\0132,.str"
    "uqt.demo.v3.Proto3Message.MapValue5Entry"
    "\022@\n\nmap_value6\030\037 \003(\0132,.struqt.demo.v3.Pr"
    "oto3Message.MapValue6Entry\022@\n\nmap_value7"
    "\030  \003(\0132,.struqt.demo.v3.Proto3Message.Ma"
    "pValue7Entry\022@\n\nmap_value8\030! \003(\0132,.struq"
    "t.demo.v3.Proto3Message.MapValue8Entry\022@"
    "\n\nmap_value9\030\" \003(\0132,.struqt.demo.v3.Prot"
    "o3Message.MapValue9Entry\022B\n\013map_value10\030"
    "# \003(\0132-.struqt.demo.v3.Proto3Message.Map"
    "Value10Entry\022B\n\013map_value12\030% \003(\0132-.stru"
    "qt.demo.v3.Proto3Message.MapValue12Entry"
    "\022B\n\013map_value14\030\' \003(\0132-.struqt.demo.v3.P"
    "roto3Message.MapValue14Entry\022B\n\013map_valu"
    "e15\030( \003(\0132-.struqt.demo.v3.Proto3Message"
    ".MapValue15Entry\022B\n\013map_value16\030- \003(\0132-."
    "struqt.demo.v3.Proto3Message.MapValue16E"
    "ntry\0222\n\022struct_value_value\030/ \001(\0132\026.googl"
    "e.protobuf.Value\022-\n\014struct_value\0300 \001(\0132\027"
    ".google.protobuf.Struct\032/\n\rMapValueEntry"
    "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0320\n\016MapV"
    "alue2Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\002"
    "8\001\0320\n\016MapValue3Entry\022\013\n\003key\030\001 \001(\005\022\r\n\005val"
    "ue\030\002 \001(\t:\0028\001\0320\n\016MapValue4Entry\022\013\n\003key\030\001 "
    "\001(\t\022\r\n\005value\030\002 \001(\003:\0028\001\0320\n\016MapValue5Entry"
    "\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\t:\0028\001\0320\n\016MapV"
    "alue6Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:\002"
    "8\001\0320\n\016MapValue7Entry\022\013\n\003key\030\001 \001(\r\022\r\n\005val"
    "ue\030\002 \001(\t:\0028\001\0320\n\016MapValue8Entry\022\013\n\003key\030\001 "
    "\001(\t\022\r\n\005value\030\002 \001(\004:\0028\001\0320\n\016MapValue9Entry"
    "\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\t:\0028\001\0321\n\017MapV"
    "alue10Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\002:"
    "\0028\001\0321\n\017MapValue12Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
    "alue\030\002 \001(\001:\0028\001\0321\n\017MapValue14Entry\022\013\n\003key"
    "\030\001 \001(\t\022\r\n\005value\030\002 \001(\010:\0028\001\0321\n\017MapValue15E"
    "ntry\022\013\n\003key\030\001 \001(\010\022\r\n\005value\030\002 \001(\t:\0028\001\032O\n\017"
    "MapValue16Entry\022\013\n\003key\030\001 \001(\t\022+\n\005value\030\002 "
    "\001(\0132\034.google.protobuf.UInt64Value:\0028\001B\r\n"
    "\013oneof_valueB\024\n\022nested_oneof_value*]\n\tEn"
    "umValue\022\032\n\026ENUM_VALUE_UNSPECIFIED\020\000\022\020\n\014E"
    "NUM_VALUE_X\020\001\022\020\n\014ENUM_VALUE_Y\020\002\022\020\n\014ENUM_"
    "VALUE_Z\020\003BX\n\030com.struqt.proto.demo.v3Z+g"
    "ithub.com/struqt/proto/struqt/demo/v3;de"
    "mo\252\002\016Struqt.Demo.V3b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_deps[5] =
    {
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
        &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto = {
    false,
    false,
    3667,
    descriptor_table_protodef_struqt_2fdemo_2fv3_2fmessages_2eproto,
    "struqt/demo/v3/messages.proto",
    &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
    descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_deps,
    5,
    17,
    schemas,
    file_default_instances,
    TableStruct_struqt_2fdemo_2fv3_2fmessages_2eproto::offsets,
    file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto,
    file_level_enum_descriptors_struqt_2fdemo_2fv3_2fmessages_2eproto,
    file_level_service_descriptors_struqt_2fdemo_2fv3_2fmessages_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter() {
  return &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_struqt_2fdemo_2fv3_2fmessages_2eproto(&descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto);
namespace struqt {
namespace demo {
namespace v3 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EnumValue_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto);
  return file_level_enum_descriptors_struqt_2fdemo_2fv3_2fmessages_2eproto[0];
}
bool EnumValue_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class EchoValueRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<EchoValueRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EchoValueRequest, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Value& value(const EchoValueRequest* msg);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Value&
EchoValueRequest::_Internal::value(const EchoValueRequest* msg) {
  return *msg->_impl_.value_;
}
void EchoValueRequest::clear_value() {
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
EchoValueRequest::EchoValueRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:struqt.demo.v3.EchoValueRequest)
}
EchoValueRequest::EchoValueRequest(const EchoValueRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EchoValueRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.value_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.value_ = new ::PROTOBUF_NAMESPACE_ID::Value(*from._impl_.value_);
  }
  // @@protoc_insertion_point(copy_constructor:struqt.demo.v3.EchoValueRequest)
}

inline void EchoValueRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.value_){nullptr}
  };
}

EchoValueRequest::~EchoValueRequest() {
  // @@protoc_insertion_point(destructor:struqt.demo.v3.EchoValueRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EchoValueRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.value_;
}

void EchoValueRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EchoValueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:struqt.demo.v3.EchoValueRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.value_ != nullptr);
    _impl_.value_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EchoValueRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Value value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* EchoValueRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:struqt.demo.v3.EchoValueRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Value value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:struqt.demo.v3.EchoValueRequest)
  return target;
}

::size_t EchoValueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:struqt.demo.v3.EchoValueRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Value value = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EchoValueRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EchoValueRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EchoValueRequest::GetClassData() const { return &_class_data_; }


void EchoValueRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EchoValueRequest*>(&to_msg);
  auto& from = static_cast<const EchoValueRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:struqt.demo.v3.EchoValueRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_value()->::PROTOBUF_NAMESPACE_ID::Value::MergeFrom(
        from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EchoValueRequest::CopyFrom(const EchoValueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:struqt.demo.v3.EchoValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoValueRequest::IsInitialized() const {
  return true;
}

void EchoValueRequest::InternalSwap(EchoValueRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.value_, other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EchoValueRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[0]);
}
// ===================================================================

class EchoValueResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<EchoValueResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EchoValueResponse, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Value& value(const EchoValueResponse* msg);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& timestamp(const EchoValueResponse* msg);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::struqt::demo::v3::Proto3Message& pb3_message(const EchoValueResponse* msg);
  static void set_has_pb3_message(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Value&
EchoValueResponse::_Internal::value(const EchoValueResponse* msg) {
  return *msg->_impl_.value_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
EchoValueResponse::_Internal::timestamp(const EchoValueResponse* msg) {
  return *msg->_impl_.timestamp_;
}
const ::struqt::demo::v3::Proto3Message&
EchoValueResponse::_Internal::pb3_message(const EchoValueResponse* msg) {
  return *msg->_impl_.pb3_message_;
}
void EchoValueResponse::clear_value() {
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void EchoValueResponse::clear_timestamp() {
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
EchoValueResponse::EchoValueResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:struqt.demo.v3.EchoValueResponse)
}
EchoValueResponse::EchoValueResponse(const EchoValueResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EchoValueResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.timestamp_){nullptr}
    , decltype(_impl_.pb3_message_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.value_ = new ::PROTOBUF_NAMESPACE_ID::Value(*from._impl_.value_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.timestamp_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.timestamp_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.pb3_message_ = new ::struqt::demo::v3::Proto3Message(*from._impl_.pb3_message_);
  }
  // @@protoc_insertion_point(copy_constructor:struqt.demo.v3.EchoValueResponse)
}

inline void EchoValueResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.timestamp_){nullptr}
    , decltype(_impl_.pb3_message_){nullptr}
  };
}

EchoValueResponse::~EchoValueResponse() {
  // @@protoc_insertion_point(destructor:struqt.demo.v3.EchoValueResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EchoValueResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.value_;
  if (this != internal_default_instance()) delete _impl_.timestamp_;
  if (this != internal_default_instance()) delete _impl_.pb3_message_;
}

void EchoValueResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EchoValueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:struqt.demo.v3.EchoValueResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.value_ != nullptr);
      _impl_.value_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.pb3_message_ != nullptr);
      _impl_.pb3_message_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EchoValueResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Value value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Timestamp timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .struqt.demo.v3.Proto3Message pb3_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_pb3_message(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* EchoValueResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:struqt.demo.v3.EchoValueResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Value value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::timestamp(this),
        _Internal::timestamp(this).GetCachedSize(), target, stream);
  }

  // .struqt.demo.v3.Proto3Message pb3_message = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::pb3_message(this),
        _Internal::pb3_message(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:struqt.demo.v3.EchoValueResponse)
  return target;
}

::size_t EchoValueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:struqt.demo.v3.EchoValueResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .google.protobuf.Value value = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_);
    }

    // .google.protobuf.Timestamp timestamp = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.timestamp_);
    }

    // .struqt.demo.v3.Proto3Message pb3_message = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pb3_message_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EchoValueResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EchoValueResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EchoValueResponse::GetClassData() const { return &_class_data_; }


void EchoValueResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EchoValueResponse*>(&to_msg);
  auto& from = static_cast<const EchoValueResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:struqt.demo.v3.EchoValueResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_value()->::PROTOBUF_NAMESPACE_ID::Value::MergeFrom(
          from._internal_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_timestamp()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
          from._internal_timestamp());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_pb3_message()->::struqt::demo::v3::Proto3Message::MergeFrom(
          from._internal_pb3_message());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EchoValueResponse::CopyFrom(const EchoValueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:struqt.demo.v3.EchoValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoValueResponse::IsInitialized() const {
  return true;
}

void EchoValueResponse::InternalSwap(EchoValueResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EchoValueResponse, _impl_.pb3_message_)
      + sizeof(EchoValueResponse::_impl_.pb3_message_)
      - PROTOBUF_FIELD_OFFSET(EchoValueResponse, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EchoValueResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[1]);
}
// ===================================================================

Proto3Message_MapValueEntry_DoNotUse::Proto3Message_MapValueEntry_DoNotUse() {}
Proto3Message_MapValueEntry_DoNotUse::Proto3Message_MapValueEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Proto3Message_MapValueEntry_DoNotUse::MergeFrom(const Proto3Message_MapValueEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message_MapValueEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[2]);
}
// ===================================================================

Proto3Message_MapValue2Entry_DoNotUse::Proto3Message_MapValue2Entry_DoNotUse() {}
Proto3Message_MapValue2Entry_DoNotUse::Proto3Message_MapValue2Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Proto3Message_MapValue2Entry_DoNotUse::MergeFrom(const Proto3Message_MapValue2Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message_MapValue2Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[3]);
}
// ===================================================================

Proto3Message_MapValue3Entry_DoNotUse::Proto3Message_MapValue3Entry_DoNotUse() {}
Proto3Message_MapValue3Entry_DoNotUse::Proto3Message_MapValue3Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Proto3Message_MapValue3Entry_DoNotUse::MergeFrom(const Proto3Message_MapValue3Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message_MapValue3Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[4]);
}
// ===================================================================

Proto3Message_MapValue4Entry_DoNotUse::Proto3Message_MapValue4Entry_DoNotUse() {}
Proto3Message_MapValue4Entry_DoNotUse::Proto3Message_MapValue4Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Proto3Message_MapValue4Entry_DoNotUse::MergeFrom(const Proto3Message_MapValue4Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message_MapValue4Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[5]);
}
// ===================================================================

Proto3Message_MapValue5Entry_DoNotUse::Proto3Message_MapValue5Entry_DoNotUse() {}
Proto3Message_MapValue5Entry_DoNotUse::Proto3Message_MapValue5Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Proto3Message_MapValue5Entry_DoNotUse::MergeFrom(const Proto3Message_MapValue5Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message_MapValue5Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[6]);
}
// ===================================================================

Proto3Message_MapValue6Entry_DoNotUse::Proto3Message_MapValue6Entry_DoNotUse() {}
Proto3Message_MapValue6Entry_DoNotUse::Proto3Message_MapValue6Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Proto3Message_MapValue6Entry_DoNotUse::MergeFrom(const Proto3Message_MapValue6Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message_MapValue6Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[7]);
}
// ===================================================================

Proto3Message_MapValue7Entry_DoNotUse::Proto3Message_MapValue7Entry_DoNotUse() {}
Proto3Message_MapValue7Entry_DoNotUse::Proto3Message_MapValue7Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Proto3Message_MapValue7Entry_DoNotUse::MergeFrom(const Proto3Message_MapValue7Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message_MapValue7Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[8]);
}
// ===================================================================

Proto3Message_MapValue8Entry_DoNotUse::Proto3Message_MapValue8Entry_DoNotUse() {}
Proto3Message_MapValue8Entry_DoNotUse::Proto3Message_MapValue8Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Proto3Message_MapValue8Entry_DoNotUse::MergeFrom(const Proto3Message_MapValue8Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message_MapValue8Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[9]);
}
// ===================================================================

Proto3Message_MapValue9Entry_DoNotUse::Proto3Message_MapValue9Entry_DoNotUse() {}
Proto3Message_MapValue9Entry_DoNotUse::Proto3Message_MapValue9Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Proto3Message_MapValue9Entry_DoNotUse::MergeFrom(const Proto3Message_MapValue9Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message_MapValue9Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[10]);
}
// ===================================================================

Proto3Message_MapValue10Entry_DoNotUse::Proto3Message_MapValue10Entry_DoNotUse() {}
Proto3Message_MapValue10Entry_DoNotUse::Proto3Message_MapValue10Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Proto3Message_MapValue10Entry_DoNotUse::MergeFrom(const Proto3Message_MapValue10Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message_MapValue10Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[11]);
}
// ===================================================================

Proto3Message_MapValue12Entry_DoNotUse::Proto3Message_MapValue12Entry_DoNotUse() {}
Proto3Message_MapValue12Entry_DoNotUse::Proto3Message_MapValue12Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Proto3Message_MapValue12Entry_DoNotUse::MergeFrom(const Proto3Message_MapValue12Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message_MapValue12Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[12]);
}
// ===================================================================

Proto3Message_MapValue14Entry_DoNotUse::Proto3Message_MapValue14Entry_DoNotUse() {}
Proto3Message_MapValue14Entry_DoNotUse::Proto3Message_MapValue14Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Proto3Message_MapValue14Entry_DoNotUse::MergeFrom(const Proto3Message_MapValue14Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message_MapValue14Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[13]);
}
// ===================================================================

Proto3Message_MapValue15Entry_DoNotUse::Proto3Message_MapValue15Entry_DoNotUse() {}
Proto3Message_MapValue15Entry_DoNotUse::Proto3Message_MapValue15Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Proto3Message_MapValue15Entry_DoNotUse::MergeFrom(const Proto3Message_MapValue15Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message_MapValue15Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[14]);
}
// ===================================================================

Proto3Message_MapValue16Entry_DoNotUse::Proto3Message_MapValue16Entry_DoNotUse() {}
Proto3Message_MapValue16Entry_DoNotUse::Proto3Message_MapValue16Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Proto3Message_MapValue16Entry_DoNotUse::MergeFrom(const Proto3Message_MapValue16Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message_MapValue16Entry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[15]);
}
// ===================================================================

class Proto3Message::_Internal {
 public:
  using HasBits = decltype(std::declval<Proto3Message>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Proto3Message, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v3::Proto3Message, _impl_._oneof_case_);
  static const ::struqt::demo::v3::Proto3Message& nested(const Proto3Message* msg);
  static void set_has_nested(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& timestamp_value(const Proto3Message* msg);
  static void set_has_timestamp_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Duration& duration_value(const Proto3Message* msg);
  static void set_has_duration_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& field_mask_value(const Proto3Message* msg);
  static void set_has_field_mask_value(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::struqt::demo::v3::Proto3Message& nested_oneof_value_one(const Proto3Message* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& wrapper_double_value(const Proto3Message* msg);
  static void set_has_wrapper_double_value(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::FloatValue& wrapper_float_value(const Proto3Message* msg);
  static void set_has_wrapper_float_value(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Int64Value& wrapper_int64_value(const Proto3Message* msg);
  static void set_has_wrapper_int64_value(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Int32Value& wrapper_int32_value(const Proto3Message* msg);
  static void set_has_wrapper_int32_value(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::UInt64Value& wrapper_u_int64_value(const Proto3Message* msg);
  static void set_has_wrapper_u_int64_value(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::UInt32Value& wrapper_u_int32_value(const Proto3Message* msg);
  static void set_has_wrapper_u_int32_value(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& wrapper_bool_value(const Proto3Message* msg);
  static void set_has_wrapper_bool_value(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::StringValue& wrapper_string_value(const Proto3Message* msg);
  static void set_has_wrapper_string_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::BytesValue& wrapper_bytes_value(const Proto3Message* msg);
  static void set_has_wrapper_bytes_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Value& struct_value_value(const Proto3Message* msg);
  static void set_has_struct_value_value(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Struct& struct_value(const Proto3Message* msg);
  static void set_has_struct_value(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
};

const ::struqt::demo::v3::Proto3Message&
Proto3Message::_Internal::nested(const Proto3Message* msg) {
  return *msg->_impl_.nested_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Proto3Message::_Internal::timestamp_value(const Proto3Message* msg) {
  return *msg->_impl_.timestamp_value_;
}
const ::PROTOBUF_NAMESPACE_ID::Duration&
Proto3Message::_Internal::duration_value(const Proto3Message* msg) {
  return *msg->_impl_.duration_value_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
Proto3Message::_Internal::field_mask_value(const Proto3Message* msg) {
  return *msg->_impl_.field_mask_value_;
}
const ::struqt::demo::v3::Proto3Message&
Proto3Message::_Internal::nested_oneof_value_one(const Proto3Message* msg) {
  return *msg->_impl_.nested_oneof_value_.nested_oneof_value_one_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Proto3Message::_Internal::wrapper_double_value(const Proto3Message* msg) {
  return *msg->_impl_.wrapper_double_value_;
}
const ::PROTOBUF_NAMESPACE_ID::FloatValue&
Proto3Message::_Internal::wrapper_float_value(const Proto3Message* msg) {
  return *msg->_impl_.wrapper_float_value_;
}
const ::PROTOBUF_NAMESPACE_ID::Int64Value&
Proto3Message::_Internal::wrapper_int64_value(const Proto3Message* msg) {
  return *msg->_impl_.wrapper_int64_value_;
}
const ::PROTOBUF_NAMESPACE_ID::Int32Value&
Proto3Message::_Internal::wrapper_int32_value(const Proto3Message* msg) {
  return *msg->_impl_.wrapper_int32_value_;
}
const ::PROTOBUF_NAMESPACE_ID::UInt64Value&
Proto3Message::_Internal::wrapper_u_int64_value(const Proto3Message* msg) {
  return *msg->_impl_.wrapper_u_int64_value_;
}
const ::PROTOBUF_NAMESPACE_ID::UInt32Value&
Proto3Message::_Internal::wrapper_u_int32_value(const Proto3Message* msg) {
  return *msg->_impl_.wrapper_u_int32_value_;
}
const ::PROTOBUF_NAMESPACE_ID::BoolValue&
Proto3Message::_Internal::wrapper_bool_value(const Proto3Message* msg) {
  return *msg->_impl_.wrapper_bool_value_;
}
const ::PROTOBUF_NAMESPACE_ID::StringValue&
Proto3Message::_Internal::wrapper_string_value(const Proto3Message* msg) {
  return *msg->_impl_.wrapper_string_value_;
}
const ::PROTOBUF_NAMESPACE_ID::BytesValue&
Proto3Message::_Internal::wrapper_bytes_value(const Proto3Message* msg) {
  return *msg->_impl_.wrapper_bytes_value_;
}
const ::PROTOBUF_NAMESPACE_ID::Value&
Proto3Message::_Internal::struct_value_value(const Proto3Message* msg) {
  return *msg->_impl_.struct_value_value_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
Proto3Message::_Internal::struct_value(const Proto3Message* msg) {
  return *msg->_impl_.struct_value_;
}
void Proto3Message::clear_repeated_message() {
  _internal_mutable_repeated_message()->Clear();
}
void Proto3Message::clear_timestamp_value() {
  if (_impl_.timestamp_value_ != nullptr) _impl_.timestamp_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Proto3Message::clear_duration_value() {
  if (_impl_.duration_value_ != nullptr) _impl_.duration_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Proto3Message::clear_field_mask_value() {
  if (_impl_.field_mask_value_ != nullptr) _impl_.field_mask_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Proto3Message::set_allocated_nested_oneof_value_one(::struqt::demo::v3::Proto3Message* nested_oneof_value_one) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_nested_oneof_value();
  if (nested_oneof_value_one) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(nested_oneof_value_one);
    if (message_arena != submessage_arena) {
      nested_oneof_value_one = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, nested_oneof_value_one, submessage_arena);
    }
    set_has_nested_oneof_value_one();
    _impl_.nested_oneof_value_.nested_oneof_value_one_ = nested_oneof_value_one;
  }
  // @@protoc_insertion_point(field_set_allocated:struqt.demo.v3.Proto3Message.nested_oneof_value_one)
}
void Proto3Message::clear_wrapper_double_value() {
  if (_impl_.wrapper_double_value_ != nullptr) _impl_.wrapper_double_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void Proto3Message::clear_wrapper_float_value() {
  if (_impl_.wrapper_float_value_ != nullptr) _impl_.wrapper_float_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void Proto3Message::clear_wrapper_int64_value() {
  if (_impl_.wrapper_int64_value_ != nullptr) _impl_.wrapper_int64_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void Proto3Message::clear_wrapper_int32_value() {
  if (_impl_.wrapper_int32_value_ != nullptr) _impl_.wrapper_int32_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void Proto3Message::clear_wrapper_u_int64_value() {
  if (_impl_.wrapper_u_int64_value_ != nullptr) _impl_.wrapper_u_int64_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void Proto3Message::clear_wrapper_u_int32_value() {
  if (_impl_.wrapper_u_int32_value_ != nullptr) _impl_.wrapper_u_int32_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void Proto3Message::clear_wrapper_bool_value() {
  if (_impl_.wrapper_bool_value_ != nullptr) _impl_.wrapper_bool_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void Proto3Message::clear_wrapper_string_value() {
  if (_impl_.wrapper_string_value_ != nullptr) _impl_.wrapper_string_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void Proto3Message::clear_wrapper_bytes_value() {
  if (_impl_.wrapper_bytes_value_ != nullptr) _impl_.wrapper_bytes_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void Proto3Message::clear_map_value16() {
  _impl_.map_value16_.Clear();
}
void Proto3Message::clear_struct_value_value() {
  if (_impl_.struct_value_value_ != nullptr) _impl_.struct_value_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void Proto3Message::clear_struct_value() {
  if (_impl_.struct_value_ != nullptr) _impl_.struct_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
Proto3Message::Proto3Message(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:struqt.demo.v3.Proto3Message)
}
Proto3Message::Proto3Message(const Proto3Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Proto3Message* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.repeated_value_){from._impl_.repeated_value_}
    , decltype(_impl_.repeated_enum_) { from._internal_repeated_enum() }
    , /*decltype(_impl_._repeated_enum_cached_byte_size_)*/ { 0 }

    , /*decltype(_impl_.map_value_)*/{}
    , /*decltype(_impl_.map_value2_)*/{}
    , /*decltype(_impl_.map_value3_)*/{}
    , /*decltype(_impl_.map_value4_)*/{}
    , /*decltype(_impl_.map_value5_)*/{}
    , /*decltype(_impl_.map_value6_)*/{}
    , /*decltype(_impl_.map_value7_)*/{}
    , /*decltype(_impl_.map_value8_)*/{}
    , /*decltype(_impl_.map_value9_)*/{}
    , /*decltype(_impl_.map_value10_)*/{}
    , /*decltype(_impl_.map_value12_)*/{}
    , /*decltype(_impl_.map_value14_)*/{}
    , /*decltype(_impl_.map_value15_)*/{}
    , decltype(_impl_.repeated_message_){from._impl_.repeated_message_}
    , /*decltype(_impl_.map_value16_)*/{}
    , decltype(_impl_.string_value_) {}

    , decltype(_impl_.bytes_value_) {}

    , decltype(_impl_.timestamp_value_){nullptr}
    , decltype(_impl_.duration_value_){nullptr}
    , decltype(_impl_.field_mask_value_){nullptr}
    , decltype(_impl_.wrapper_double_value_){nullptr}
    , decltype(_impl_.wrapper_float_value_){nullptr}
    , decltype(_impl_.wrapper_int64_value_){nullptr}
    , decltype(_impl_.wrapper_int32_value_){nullptr}
    , decltype(_impl_.wrapper_u_int64_value_){nullptr}
    , decltype(_impl_.wrapper_u_int32_value_){nullptr}
    , decltype(_impl_.wrapper_bool_value_){nullptr}
    , decltype(_impl_.wrapper_string_value_){nullptr}
    , decltype(_impl_.wrapper_bytes_value_){nullptr}
    , decltype(_impl_.nested_){nullptr}
    , decltype(_impl_.struct_value_value_){nullptr}
    , decltype(_impl_.struct_value_){nullptr}
    , decltype(_impl_.int64_value_) {}

    , decltype(_impl_.uint64_value_) {}

    , decltype(_impl_.int32_value_) {}

    , decltype(_impl_.uint32_value_) {}

    , decltype(_impl_.bool_value_) {}

    , decltype(_impl_.enum_value_) {}

    , decltype(_impl_.double_value_) {}

    , decltype(_impl_.float_value_) {}

    , decltype(_impl_.oneof_value_){}
    , decltype(_impl_.nested_oneof_value_){}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.map_value_.MergeFrom(from._impl_.map_value_);
  _this->_impl_.map_value2_.MergeFrom(from._impl_.map_value2_);
  _this->_impl_.map_value3_.MergeFrom(from._impl_.map_value3_);
  _this->_impl_.map_value4_.MergeFrom(from._impl_.map_value4_);
  _this->_impl_.map_value5_.MergeFrom(from._impl_.map_value5_);
  _this->_impl_.map_value6_.MergeFrom(from._impl_.map_value6_);
  _this->_impl_.map_value7_.MergeFrom(from._impl_.map_value7_);
  _this->_impl_.map_value8_.MergeFrom(from._impl_.map_value8_);
  _this->_impl_.map_value9_.MergeFrom(from._impl_.map_value9_);
  _this->_impl_.map_value10_.MergeFrom(from._impl_.map_value10_);
  _this->_impl_.map_value12_.MergeFrom(from._impl_.map_value12_);
  _this->_impl_.map_value14_.MergeFrom(from._impl_.map_value14_);
  _this->_impl_.map_value15_.MergeFrom(from._impl_.map_value15_);
  _this->_impl_.map_value16_.MergeFrom(from._impl_.map_value16_);
  _impl_.string_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.string_value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_string_value().empty()) {
    _this->_impl_.string_value_.Set(from._internal_string_value(), _this->GetArenaForAllocation());
  }
  _impl_.bytes_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bytes_value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bytes_value().empty()) {
    _this->_impl_.bytes_value_.Set(from._internal_bytes_value(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.timestamp_value_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.timestamp_value_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.duration_value_ = new ::PROTOBUF_NAMESPACE_ID::Duration(*from._impl_.duration_value_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.field_mask_value_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from._impl_.field_mask_value_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.wrapper_double_value_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.wrapper_double_value_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000010u) != 0) {
    _this->_impl_.wrapper_float_value_ = new ::PROTOBUF_NAMESPACE_ID::FloatValue(*from._impl_.wrapper_float_value_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000020u) != 0) {
    _this->_impl_.wrapper_int64_value_ = new ::PROTOBUF_NAMESPACE_ID::Int64Value(*from._impl_.wrapper_int64_value_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000040u) != 0) {
    _this->_impl_.wrapper_int32_value_ = new ::PROTOBUF_NAMESPACE_ID::Int32Value(*from._impl_.wrapper_int32_value_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000080u) != 0) {
    _this->_impl_.wrapper_u_int64_value_ = new ::PROTOBUF_NAMESPACE_ID::UInt64Value(*from._impl_.wrapper_u_int64_value_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000100u) != 0) {
    _this->_impl_.wrapper_u_int32_value_ = new ::PROTOBUF_NAMESPACE_ID::UInt32Value(*from._impl_.wrapper_u_int32_value_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000200u) != 0) {
    _this->_impl_.wrapper_bool_value_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from._impl_.wrapper_bool_value_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000400u) != 0) {
    _this->_impl_.wrapper_string_value_ = new ::PROTOBUF_NAMESPACE_ID::StringValue(*from._impl_.wrapper_string_value_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000800u) != 0) {
    _this->_impl_.wrapper_bytes_value_ = new ::PROTOBUF_NAMESPACE_ID::BytesValue(*from._impl_.wrapper_bytes_value_);
  }
  if ((from._impl_._has_bits_[0] & 0x00001000u) != 0) {
    _this->_impl_.nested_ = new ::struqt::demo::v3::Proto3Message(*from._impl_.nested_);
  }
  if ((from._impl_._has_bits_[0] & 0x00002000u) != 0) {
    _this->_impl_.struct_value_value_ = new ::PROTOBUF_NAMESPACE_ID::Value(*from._impl_.struct_value_value_);
  }
  if ((from._impl_._has_bits_[0] & 0x00004000u) != 0) {
    _this->_impl_.struct_value_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.struct_value_);
  }
  ::memcpy(&_impl_.int64_value_, &from._impl_.int64_value_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.float_value_) -
    reinterpret_cast<char*>(&_impl_.int64_value_)) + sizeof(_impl_.float_value_));
  clear_has_oneof_value();
  switch (from.oneof_value_case()) {
    case kOneofBoolValue: {
      _this->_internal_set_oneof_bool_value(from._internal_oneof_bool_value());
      break;
    }
    case kOneofStringValue: {
      _this->_internal_set_oneof_string_value(from._internal_oneof_string_value());
      break;
    }
    case ONEOF_VALUE_NOT_SET: {
      break;
    }
  }
  clear_has_nested_oneof_value();
  switch (from.nested_oneof_value_case()) {
    case kNestedOneofValueOne: {
      _this->_internal_mutable_nested_oneof_value_one()->::struqt::demo::v3::Proto3Message::MergeFrom(
          from._internal_nested_oneof_value_one());
      break;
    }
    case NESTED_ONEOF_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:struqt.demo.v3.Proto3Message)
}

inline void Proto3Message::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.repeated_value_){arena}
    , decltype(_impl_.repeated_enum_) { arena }
    , /*decltype(_impl_._repeated_enum_cached_byte_size_)*/ { 0 }

    , /*decltype(_impl_.map_value_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.map_value2_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.map_value3_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.map_value4_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.map_value5_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.map_value6_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.map_value7_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.map_value8_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.map_value9_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.map_value10_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.map_value12_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.map_value14_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.map_value15_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.repeated_message_){arena}
    , /*decltype(_impl_.map_value16_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.string_value_) {}

    , decltype(_impl_.bytes_value_) {}

    , decltype(_impl_.timestamp_value_){nullptr}
    , decltype(_impl_.duration_value_){nullptr}
    , decltype(_impl_.field_mask_value_){nullptr}
    , decltype(_impl_.wrapper_double_value_){nullptr}
    , decltype(_impl_.wrapper_float_value_){nullptr}
    , decltype(_impl_.wrapper_int64_value_){nullptr}
    , decltype(_impl_.wrapper_int32_value_){nullptr}
    , decltype(_impl_.wrapper_u_int64_value_){nullptr}
    , decltype(_impl_.wrapper_u_int32_value_){nullptr}
    , decltype(_impl_.wrapper_bool_value_){nullptr}
    , decltype(_impl_.wrapper_string_value_){nullptr}
    , decltype(_impl_.wrapper_bytes_value_){nullptr}
    , decltype(_impl_.nested_){nullptr}
    , decltype(_impl_.struct_value_value_){nullptr}
    , decltype(_impl_.struct_value_){nullptr}
    , decltype(_impl_.int64_value_) { ::int64_t{0} }

    , decltype(_impl_.uint64_value_) { ::uint64_t{0u} }

    , decltype(_impl_.int32_value_) { 0 }

    , decltype(_impl_.uint32_value_) { 0u }

    , decltype(_impl_.bool_value_) { false }

    , decltype(_impl_.enum_value_) { 0 }

    , decltype(_impl_.double_value_) { 0 }

    , decltype(_impl_.float_value_) { 0 }

    , decltype(_impl_.oneof_value_){}
    , decltype(_impl_.nested_oneof_value_){}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.string_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.string_value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.bytes_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bytes_value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_oneof_value();
  clear_has_nested_oneof_value();
}

Proto3Message::~Proto3Message() {
  // @@protoc_insertion_point(destructor:struqt.demo.v3.Proto3Message)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Proto3Message::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_repeated_value()->~RepeatedPtrField();
  _internal_mutable_repeated_enum()->~RepeatedField();
  _impl_.map_value_.~MapField();
  _impl_.map_value2_.~MapField();
  _impl_.map_value3_.~MapField();
  _impl_.map_value4_.~MapField();
  _impl_.map_value5_.~MapField();
  _impl_.map_value6_.~MapField();
  _impl_.map_value7_.~MapField();
  _impl_.map_value8_.~MapField();
  _impl_.map_value9_.~MapField();
  _impl_.map_value10_.~MapField();
  _impl_.map_value12_.~MapField();
  _impl_.map_value14_.~MapField();
  _impl_.map_value15_.~MapField();
  _internal_mutable_repeated_message()->~RepeatedPtrField();
  _impl_.map_value16_.~MapField();
  _impl_.string_value_.Destroy();
  _impl_.bytes_value_.Destroy();
  if (this != internal_default_instance()) delete _impl_.timestamp_value_;
  if (this != internal_default_instance()) delete _impl_.duration_value_;
  if (this != internal_default_instance()) delete _impl_.field_mask_value_;
  if (this != internal_default_instance()) delete _impl_.wrapper_double_value_;
  if (this != internal_default_instance()) delete _impl_.wrapper_float_value_;
  if (this != internal_default_instance()) delete _impl_.wrapper_int64_value_;
  if (this != internal_default_instance()) delete _impl_.wrapper_int32_value_;
  if (this != internal_default_instance()) delete _impl_.wrapper_u_int64_value_;
  if (this != internal_default_instance()) delete _impl_.wrapper_u_int32_value_;
  if (this != internal_default_instance()) delete _impl_.wrapper_bool_value_;
  if (this != internal_default_instance()) delete _impl_.wrapper_string_value_;
  if (this != internal_default_instance()) delete _impl_.wrapper_bytes_value_;
  if (this != internal_default_instance()) delete _impl_.nested_;
  if (this != internal_default_instance()) delete _impl_.struct_value_value_;
  if (this != internal_default_instance()) delete _impl_.struct_value_;
  if (has_oneof_value()) {
    clear_oneof_value();
  }
  if (has_nested_oneof_value()) {
    clear_nested_oneof_value();
  }
}

void Proto3Message::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Proto3Message::clear_oneof_value() {
// @@protoc_insertion_point(one_of_clear_start:struqt.demo.v3.Proto3Message)
  switch (oneof_value_case()) {
    case kOneofBoolValue: {
      // No need to clear
      break;
    }
    case kOneofStringValue: {
      _impl_.oneof_value_.oneof_string_value_.Destroy();
      break;
    }
    case ONEOF_VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ONEOF_VALUE_NOT_SET;
}

void Proto3Message::clear_nested_oneof_value() {
// @@protoc_insertion_point(one_of_clear_start:struqt.demo.v3.Proto3Message)
  switch (nested_oneof_value_case()) {
    case kNestedOneofValueOne: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.nested_oneof_value_.nested_oneof_value_one_;
      }
      break;
    }
    case NESTED_ONEOF_VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[1] = NESTED_ONEOF_VALUE_NOT_SET;
}


void Proto3Message::Clear() {
// @@protoc_insertion_point(message_clear_start:struqt.demo.v3.Proto3Message)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_value()->Clear();
  _internal_mutable_repeated_enum()->Clear();
  _impl_.map_value_.Clear();
  _impl_.map_value2_.Clear();
  _impl_.map_value3_.Clear();
  _impl_.map_value4_.Clear();
  _impl_.map_value5_.Clear();
  _impl_.map_value6_.Clear();
  _impl_.map_value7_.Clear();
  _impl_.map_value8_.Clear();
  _impl_.map_value9_.Clear();
  _impl_.map_value10_.Clear();
  _impl_.map_value12_.Clear();
  _impl_.map_value14_.Clear();
  _impl_.map_value15_.Clear();
  _internal_mutable_repeated_message()->Clear();
  _impl_.map_value16_.Clear();
  _impl_.string_value_.ClearToEmpty();
  _impl_.bytes_value_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.timestamp_value_ != nullptr);
      _impl_.timestamp_value_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.duration_value_ != nullptr);
      _impl_.duration_value_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.field_mask_value_ != nullptr);
      _impl_.field_mask_value_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.wrapper_double_value_ != nullptr);
      _impl_.wrapper_double_value_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.wrapper_float_value_ != nullptr);
      _impl_.wrapper_float_value_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.wrapper_int64_value_ != nullptr);
      _impl_.wrapper_int64_value_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.wrapper_int32_value_ != nullptr);
      _impl_.wrapper_int32_value_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.wrapper_u_int64_value_ != nullptr);
      _impl_.wrapper_u_int64_value_->Clear();
    }
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.wrapper_u_int32_value_ != nullptr);
      _impl_.wrapper_u_int32_value_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.wrapper_bool_value_ != nullptr);
      _impl_.wrapper_bool_value_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.wrapper_string_value_ != nullptr);
      _impl_.wrapper_string_value_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.wrapper_bytes_value_ != nullptr);
      _impl_.wrapper_bytes_value_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(_impl_.nested_ != nullptr);
      _impl_.nested_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      ABSL_DCHECK(_impl_.struct_value_value_ != nullptr);
      _impl_.struct_value_value_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      ABSL_DCHECK(_impl_.struct_value_ != nullptr);
      _impl_.struct_value_->Clear();
    }
  }
  ::memset(&_impl_.int64_value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.float_value_) -
      reinterpret_cast<char*>(&_impl_.int64_value_)) + sizeof(_impl_.float_value_));
  clear_oneof_value();
  clear_nested_oneof_value();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Proto3Message::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool oneof_bool_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _internal_set_oneof_bool_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string oneof_string_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_oneof_string_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "struqt.demo.v3.Proto3Message.oneof_string_value"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 int64_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.int64_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 int32_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.int32_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 uint64_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _impl_.uint64_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint32 uint32_value = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 48)) {
          _impl_.uint32_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool bool_value = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 56)) {
          _impl_.bool_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string string_value = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_string_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "struqt.demo.v3.Proto3Message.string_value"));
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes bytes_value = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_bytes_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string repeated_value = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_repeated_value();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "struqt.demo.v3.Proto3Message.repeated_value"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .struqt.demo.v3.EnumValue enum_value = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 88)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_enum_value(static_cast<::struqt::demo::v3::EnumValue>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .struqt.demo.v3.EnumValue repeated_enum = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 98)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_repeated_enum(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::uint8_t>(tag) == 96) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_add_repeated_enum(static_cast<::struqt::demo::v3::EnumValue>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Timestamp timestamp_value = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Duration duration_value = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_duration_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.FieldMask field_mask_value = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_field_mask_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.DoubleValue wrapper_double_value = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_wrapper_double_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.FloatValue wrapper_float_value = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_wrapper_float_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Int64Value wrapper_int64_value = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_wrapper_int64_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Int32Value wrapper_int32_value = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_wrapper_int32_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.UInt64Value wrapper_u_int64_value = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_wrapper_u_int64_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.UInt32Value wrapper_u_int32_value = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_wrapper_u_int32_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.BoolValue wrapper_bool_value = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_wrapper_bool_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.StringValue wrapper_string_value = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_wrapper_string_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.BytesValue wrapper_bytes_value = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_wrapper_bytes_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // map<string, string> map_value = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 210)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.map_value_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<210>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<string, int32> map_value2 = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 218)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.map_value2_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<218>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<int32, string> map_value3 = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 226)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.map_value3_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<226>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<string, int64> map_value4 = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 234)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.map_value4_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<234>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<int64, string> map_value5 = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 242)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.map_value5_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<242>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<string, uint32> map_value6 = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 250)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.map_value6_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<250>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<uint32, string> map_value7 = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 2)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.map_value7_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<258>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<string, uint64> map_value8 = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.map_value8_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<266>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<uint64, string> map_value9 = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.map_value9_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<274>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<string, float> map_value10 = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.map_value10_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<282>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<string, double> map_value12 = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.map_value12_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<298>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<string, bool> map_value14 = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 58)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.map_value14_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<314>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<bool, string> map_value15 = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.map_value15_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<322>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .struqt.demo.v3.Proto3Message nested = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_nested(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // float float_value = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 85)) {
          _impl_.float_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else {
          goto handle_unusual;
        }
        continue;
      // double double_value = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 89)) {
          _impl_.double_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .google.protobuf.UInt64Value repeated_message = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 98)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_repeated_message(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<354>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // map<string, .google.protobuf.UInt64Value> map_value16 = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 106)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.map_value16_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<362>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .struqt.demo.v3.Proto3Message nested_oneof_value_one = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_nested_oneof_value_one(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Value struct_value_value = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_struct_value_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Struct struct_value = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_struct_value(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* Proto3Message::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:struqt.demo.v3.Proto3Message)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (oneof_value_case()) {
    case kOneofBoolValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this->_internal_oneof_bool_value(), target);
      break;
    }
    case kOneofStringValue: {
      const std::string& _s = this->_internal_oneof_string_value();
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.oneof_string_value");
      target = stream->WriteStringMaybeAliased(2, _s, target);
      break;
    }
    default: ;
  }
  // int64 int64_value = 3;
  if (this->_internal_int64_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        3, this->_internal_int64_value(), target);
  }

  // int32 int32_value = 4;
  if (this->_internal_int32_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        4, this->_internal_int32_value(), target);
  }

  // uint64 uint64_value = 5;
  if (this->_internal_uint64_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_uint64_value(), target);
  }

  // uint32 uint32_value = 6;
  if (this->_internal_uint32_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_uint32_value(), target);
  }

  // bool bool_value = 7;
  if (this->_internal_bool_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_bool_value(), target);
  }

  // string string_value = 8;
  if (!this->_internal_string_value().empty()) {
    const std::string& _s = this->_internal_string_value();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.string_value");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // bytes bytes_value = 9;
  if (!this->_internal_bytes_value().empty()) {
    const std::string& _s = this->_internal_bytes_value();
    target = stream->WriteBytesMaybeAliased(9, _s, target);
  }

  // repeated string repeated_value = 10;
  for (int i = 0, n = this->_internal_repeated_value_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_value(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.repeated_value");
    target = stream->WriteString(10, s, target);
  }

  // .struqt.demo.v3.EnumValue enum_value = 11;
  if (this->_internal_enum_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        11, this->_internal_enum_value(), target);
  }

  // repeated .struqt.demo.v3.EnumValue repeated_enum = 12;
  {
    int byte_size = _impl_._repeated_enum_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(12, _internal_repeated_enum(),
                                       byte_size, target);
    }
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp_value = 13;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::timestamp_value(this),
        _Internal::timestamp_value(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Duration duration_value = 14;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::duration_value(this),
        _Internal::duration_value(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FieldMask field_mask_value = 15;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::field_mask_value(this),
        _Internal::field_mask_value(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue wrapper_double_value = 17;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::wrapper_double_value(this),
        _Internal::wrapper_double_value(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FloatValue wrapper_float_value = 18;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(18, _Internal::wrapper_float_value(this),
        _Internal::wrapper_float_value(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Int64Value wrapper_int64_value = 19;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(19, _Internal::wrapper_int64_value(this),
        _Internal::wrapper_int64_value(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Int32Value wrapper_int32_value = 20;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(20, _Internal::wrapper_int32_value(this),
        _Internal::wrapper_int32_value(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.UInt64Value wrapper_u_int64_value = 21;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::wrapper_u_int64_value(this),
        _Internal::wrapper_u_int64_value(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.UInt32Value wrapper_u_int32_value = 22;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(22, _Internal::wrapper_u_int32_value(this),
        _Internal::wrapper_u_int32_value(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BoolValue wrapper_bool_value = 23;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, _Internal::wrapper_bool_value(this),
        _Internal::wrapper_bool_value(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.StringValue wrapper_string_value = 24;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(24, _Internal::wrapper_string_value(this),
        _Internal::wrapper_string_value(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BytesValue wrapper_bytes_value = 25;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, _Internal::wrapper_bytes_value(this),
        _Internal::wrapper_bytes_value(this).GetCachedSize(), target, stream);
  }

  // map<string, string> map_value = 26;
  if (!this->_internal_map_value().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = Proto3Message_MapValueEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_value();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.first.data(), static_cast<int>(entry.first.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.second.data(), static_cast<int>(entry.second.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(26, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(26, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, int32> map_value2 = 27;
  if (!this->_internal_map_value2().empty()) {
    using MapType = ::_pb::Map<std::string, ::int32_t>;
    using WireHelper = Proto3Message_MapValue2Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_value2();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.first.data(), static_cast<int>(entry.first.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value2");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(27, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(27, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<int32, string> map_value3 = 28;
  if (!this->_internal_map_value3().empty()) {
    using MapType = ::_pb::Map<::int32_t, std::string>;
    using WireHelper = Proto3Message_MapValue3Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_value3();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.second.data(), static_cast<int>(entry.second.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value3");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(28, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(28, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, int64> map_value4 = 29;
  if (!this->_internal_map_value4().empty()) {
    using MapType = ::_pb::Map<std::string, ::int64_t>;
    using WireHelper = Proto3Message_MapValue4Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_value4();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.first.data(), static_cast<int>(entry.first.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value4");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(29, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(29, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<int64, string> map_value5 = 30;
  if (!this->_internal_map_value5().empty()) {
    using MapType = ::_pb::Map<::int64_t, std::string>;
    using WireHelper = Proto3Message_MapValue5Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_value5();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.second.data(), static_cast<int>(entry.second.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value5");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(30, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(30, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, uint32> map_value6 = 31;
  if (!this->_internal_map_value6().empty()) {
    using MapType = ::_pb::Map<std::string, ::uint32_t>;
    using WireHelper = Proto3Message_MapValue6Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_value6();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.first.data(), static_cast<int>(entry.first.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value6");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(31, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(31, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<uint32, string> map_value7 = 32;
  if (!this->_internal_map_value7().empty()) {
    using MapType = ::_pb::Map<::uint32_t, std::string>;
    using WireHelper = Proto3Message_MapValue7Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_value7();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.second.data(), static_cast<int>(entry.second.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value7");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(32, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(32, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, uint64> map_value8 = 33;
  if (!this->_internal_map_value8().empty()) {
    using MapType = ::_pb::Map<std::string, ::uint64_t>;
    using WireHelper = Proto3Message_MapValue8Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_value8();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.first.data(), static_cast<int>(entry.first.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value8");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(33, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(33, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<uint64, string> map_value9 = 34;
  if (!this->_internal_map_value9().empty()) {
    using MapType = ::_pb::Map<::uint64_t, std::string>;
    using WireHelper = Proto3Message_MapValue9Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_value9();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.second.data(), static_cast<int>(entry.second.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value9");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(34, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(34, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, float> map_value10 = 35;
  if (!this->_internal_map_value10().empty()) {
    using MapType = ::_pb::Map<std::string, float>;
    using WireHelper = Proto3Message_MapValue10Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_value10();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.first.data(), static_cast<int>(entry.first.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value10");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(35, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(35, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, double> map_value12 = 37;
  if (!this->_internal_map_value12().empty()) {
    using MapType = ::_pb::Map<std::string, double>;
    using WireHelper = Proto3Message_MapValue12Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_value12();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.first.data(), static_cast<int>(entry.first.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value12");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(37, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(37, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, bool> map_value14 = 39;
  if (!this->_internal_map_value14().empty()) {
    using MapType = ::_pb::Map<std::string, bool>;
    using WireHelper = Proto3Message_MapValue14Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_value14();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.first.data(), static_cast<int>(entry.first.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value14");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(39, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(39, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<bool, string> map_value15 = 40;
  if (!this->_internal_map_value15().empty()) {
    using MapType = ::_pb::Map<bool, std::string>;
    using WireHelper = Proto3Message_MapValue15Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_value15();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.second.data(), static_cast<int>(entry.second.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value15");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(40, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(40, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // .struqt.demo.v3.Proto3Message nested = 41;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(41, _Internal::nested(this),
        _Internal::nested(this).GetCachedSize(), target, stream);
  }

  // float float_value = 42;
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_float_value = this->_internal_float_value();
  ::uint32_t raw_float_value;
  memcpy(&raw_float_value, &tmp_float_value, sizeof(tmp_float_value));
  if (raw_float_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        42, this->_internal_float_value(), target);
  }

  // double double_value = 43;
  static_assert(sizeof(::uint64_t) == sizeof(double), "Code assumes ::uint64_t and double are the same size.");
  double tmp_double_value = this->_internal_double_value();
  ::uint64_t raw_double_value;
  memcpy(&raw_double_value, &tmp_double_value, sizeof(tmp_double_value));
  if (raw_double_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        43, this->_internal_double_value(), target);
  }

  // repeated .google.protobuf.UInt64Value repeated_message = 44;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_message(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(44, repfield, repfield.GetCachedSize(), target, stream);
  }

  // map<string, .google.protobuf.UInt64Value> map_value16 = 45;
  if (!this->_internal_map_value16().empty()) {
    using MapType = ::_pb::Map<std::string, ::PROTOBUF_NAMESPACE_ID::UInt64Value>;
    using WireHelper = Proto3Message_MapValue16Entry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_map_value16();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          entry.first.data(), static_cast<int>(entry.first.length()),
 ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v3.Proto3Message.map_value16");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(45, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(45, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // .struqt.demo.v3.Proto3Message nested_oneof_value_one = 46;
  if (nested_oneof_value_case() == kNestedOneofValueOne) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(46, _Internal::nested_oneof_value_one(this),
        _Internal::nested_oneof_value_one(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Value struct_value_value = 47;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(47, _Internal::struct_value_value(this),
        _Internal::struct_value_value(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct struct_value = 48;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(48, _Internal::struct_value(this),
        _Internal::struct_value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:struqt.demo.v3.Proto3Message)
  return target;
}

::size_t Proto3Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:struqt.demo.v3.Proto3Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string repeated_value = 10;
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_repeated_value().size());
  for (int i = 0, n = _internal_repeated_value().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_repeated_value().Get(i));
  }

  // repeated .struqt.demo.v3.EnumValue repeated_enum = 12;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_enum_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_enum(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._repeated_enum_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }

  // map<string, string> map_value = 26;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_value_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_map_value().begin();
      it != this->_internal_map_value().end(); ++it) {
    total_size += Proto3Message_MapValueEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, int32> map_value2 = 27;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_value2_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::int32_t >::const_iterator
      it = this->_internal_map_value2().begin();
      it != this->_internal_map_value2().end(); ++it) {
    total_size += Proto3Message_MapValue2Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, string> map_value3 = 28;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_value3_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::int32_t, std::string >::const_iterator
      it = this->_internal_map_value3().begin();
      it != this->_internal_map_value3().end(); ++it) {
    total_size += Proto3Message_MapValue3Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, int64> map_value4 = 29;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_value4_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::int64_t >::const_iterator
      it = this->_internal_map_value4().begin();
      it != this->_internal_map_value4().end(); ++it) {
    total_size += Proto3Message_MapValue4Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int64, string> map_value5 = 30;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_value5_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::int64_t, std::string >::const_iterator
      it = this->_internal_map_value5().begin();
      it != this->_internal_map_value5().end(); ++it) {
    total_size += Proto3Message_MapValue5Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, uint32> map_value6 = 31;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_value6_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::uint32_t >::const_iterator
      it = this->_internal_map_value6().begin();
      it != this->_internal_map_value6().end(); ++it) {
    total_size += Proto3Message_MapValue6Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, string> map_value7 = 32;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_value7_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::uint32_t, std::string >::const_iterator
      it = this->_internal_map_value7().begin();
      it != this->_internal_map_value7().end(); ++it) {
    total_size += Proto3Message_MapValue7Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, uint64> map_value8 = 33;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_value8_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::uint64_t >::const_iterator
      it = this->_internal_map_value8().begin();
      it != this->_internal_map_value8().end(); ++it) {
    total_size += Proto3Message_MapValue8Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint64, string> map_value9 = 34;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_value9_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::uint64_t, std::string >::const_iterator
      it = this->_internal_map_value9().begin();
      it != this->_internal_map_value9().end(); ++it) {
    total_size += Proto3Message_MapValue9Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, float> map_value10 = 35;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_value10_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
      it = this->_internal_map_value10().begin();
      it != this->_internal_map_value10().end(); ++it) {
    total_size += Proto3Message_MapValue10Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, double> map_value12 = 37;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_value12_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, double >::const_iterator
      it = this->_internal_map_value12().begin();
      it != this->_internal_map_value12().end(); ++it) {
    total_size += Proto3Message_MapValue12Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, bool> map_value14 = 39;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_value14_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, bool >::const_iterator
      it = this->_internal_map_value14().begin();
      it != this->_internal_map_value14().end(); ++it) {
    total_size += Proto3Message_MapValue14Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<bool, string> map_value15 = 40;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_value15_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< bool, std::string >::const_iterator
      it = this->_internal_map_value15().begin();
      it != this->_internal_map_value15().end(); ++it) {
    total_size += Proto3Message_MapValue15Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .google.protobuf.UInt64Value repeated_message = 44;
  total_size += 2UL * this->_internal_repeated_message_size();
  for (const auto& msg : this->_internal_repeated_message()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, .google.protobuf.UInt64Value> map_value16 = 45;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_map_value16_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::UInt64Value >::const_iterator
      it = this->_internal_map_value16().begin();
      it != this->_internal_map_value16().end(); ++it) {
    total_size += Proto3Message_MapValue16Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string string_value = 8;
  if (!this->_internal_string_value().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_string_value());
  }

  // bytes bytes_value = 9;
  if (!this->_internal_bytes_value().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_bytes_value());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // .google.protobuf.Timestamp timestamp_value = 13;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.timestamp_value_);
    }

    // .google.protobuf.Duration duration_value = 14;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.duration_value_);
    }

    // .google.protobuf.FieldMask field_mask_value = 15;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.field_mask_value_);
    }

    // .google.protobuf.DoubleValue wrapper_double_value = 17;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.wrapper_double_value_);
    }

    // .google.protobuf.FloatValue wrapper_float_value = 18;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.wrapper_float_value_);
    }

    // .google.protobuf.Int64Value wrapper_int64_value = 19;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.wrapper_int64_value_);
    }

    // .google.protobuf.Int32Value wrapper_int32_value = 20;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.wrapper_int32_value_);
    }

    // .google.protobuf.UInt64Value wrapper_u_int64_value = 21;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.wrapper_u_int64_value_);
    }

  }
  if (cached_has_bits & 0x00007f00u) {
    // .google.protobuf.UInt32Value wrapper_u_int32_value = 22;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.wrapper_u_int32_value_);
    }

    // .google.protobuf.BoolValue wrapper_bool_value = 23;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.wrapper_bool_value_);
    }

    // .google.protobuf.StringValue wrapper_string_value = 24;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.wrapper_string_value_);
    }

    // .google.protobuf.BytesValue wrapper_bytes_value = 25;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.wrapper_bytes_value_);
    }

    // .struqt.demo.v3.Proto3Message nested = 41;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nested_);
    }

    // .google.protobuf.Value struct_value_value = 47;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.struct_value_value_);
    }

    // .google.protobuf.Struct struct_value = 48;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.struct_value_);
    }

  }
  // int64 int64_value = 3;
  if (this->_internal_int64_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_int64_value());
  }

  // uint64 uint64_value = 5;
  if (this->_internal_uint64_value() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_uint64_value());
  }

  // int32 int32_value = 4;
  if (this->_internal_int32_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_int32_value());
  }

  // uint32 uint32_value = 6;
  if (this->_internal_uint32_value() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_uint32_value());
  }

  // bool bool_value = 7;
  if (this->_internal_bool_value() != 0) {
    total_size += 2;
  }

  // .struqt.demo.v3.EnumValue enum_value = 11;
  if (this->_internal_enum_value() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_enum_value());
  }

  // double double_value = 43;
  static_assert(sizeof(::uint64_t) == sizeof(double), "Code assumes ::uint64_t and double are the same size.");
  double tmp_double_value = this->_internal_double_value();
  ::uint64_t raw_double_value;
  memcpy(&raw_double_value, &tmp_double_value, sizeof(tmp_double_value));
  if (raw_double_value != 0) {
    total_size += 10;
  }

  // float float_value = 42;
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_float_value = this->_internal_float_value();
  ::uint32_t raw_float_value;
  memcpy(&raw_float_value, &tmp_float_value, sizeof(tmp_float_value));
  if (raw_float_value != 0) {
    total_size += 6;
  }

  switch (oneof_value_case()) {
    // bool oneof_bool_value = 1;
    case kOneofBoolValue: {
      total_size += 2;
      break;
    }
    // string oneof_string_value = 2;
    case kOneofStringValue: {
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_oneof_string_value());
      break;
    }
    case ONEOF_VALUE_NOT_SET: {
      break;
    }
  }
  switch (nested_oneof_value_case()) {
    // .struqt.demo.v3.Proto3Message nested_oneof_value_one = 46;
    case kNestedOneofValueOne: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nested_oneof_value_.nested_oneof_value_one_);
      break;
    }
    case NESTED_ONEOF_VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Proto3Message::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Proto3Message::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Proto3Message::GetClassData() const { return &_class_data_; }


void Proto3Message::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Proto3Message*>(&to_msg);
  auto& from = static_cast<const Proto3Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:struqt.demo.v3.Proto3Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_value()->MergeFrom(from._internal_repeated_value());
  _this->_internal_mutable_repeated_enum()->MergeFrom(from._internal_repeated_enum());
  _this->_impl_.map_value_.MergeFrom(from._impl_.map_value_);
  _this->_impl_.map_value2_.MergeFrom(from._impl_.map_value2_);
  _this->_impl_.map_value3_.MergeFrom(from._impl_.map_value3_);
  _this->_impl_.map_value4_.MergeFrom(from._impl_.map_value4_);
  _this->_impl_.map_value5_.MergeFrom(from._impl_.map_value5_);
  _this->_impl_.map_value6_.MergeFrom(from._impl_.map_value6_);
  _this->_impl_.map_value7_.MergeFrom(from._impl_.map_value7_);
  _this->_impl_.map_value8_.MergeFrom(from._impl_.map_value8_);
  _this->_impl_.map_value9_.MergeFrom(from._impl_.map_value9_);
  _this->_impl_.map_value10_.MergeFrom(from._impl_.map_value10_);
  _this->_impl_.map_value12_.MergeFrom(from._impl_.map_value12_);
  _this->_impl_.map_value14_.MergeFrom(from._impl_.map_value14_);
  _this->_impl_.map_value15_.MergeFrom(from._impl_.map_value15_);
  _this->_internal_mutable_repeated_message()->MergeFrom(from._internal_repeated_message());
  _this->_impl_.map_value16_.MergeFrom(from._impl_.map_value16_);
  if (!from._internal_string_value().empty()) {
    _this->_internal_set_string_value(from._internal_string_value());
  }
  if (!from._internal_bytes_value().empty()) {
    _this->_internal_set_bytes_value(from._internal_bytes_value());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_timestamp_value()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
          from._internal_timestamp_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_duration_value()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(
          from._internal_duration_value());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_field_mask_value()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(
          from._internal_field_mask_value());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_wrapper_double_value()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
          from._internal_wrapper_double_value());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_wrapper_float_value()->::PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(
          from._internal_wrapper_float_value());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_wrapper_int64_value()->::PROTOBUF_NAMESPACE_ID::Int64Value::MergeFrom(
          from._internal_wrapper_int64_value());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_wrapper_int32_value()->::PROTOBUF_NAMESPACE_ID::Int32Value::MergeFrom(
          from._internal_wrapper_int32_value());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_wrapper_u_int64_value()->::PROTOBUF_NAMESPACE_ID::UInt64Value::MergeFrom(
          from._internal_wrapper_u_int64_value());
    }
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_wrapper_u_int32_value()->::PROTOBUF_NAMESPACE_ID::UInt32Value::MergeFrom(
          from._internal_wrapper_u_int32_value());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_wrapper_bool_value()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(
          from._internal_wrapper_bool_value());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_wrapper_string_value()->::PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(
          from._internal_wrapper_string_value());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_wrapper_bytes_value()->::PROTOBUF_NAMESPACE_ID::BytesValue::MergeFrom(
          from._internal_wrapper_bytes_value());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_nested()->::struqt::demo::v3::Proto3Message::MergeFrom(
          from._internal_nested());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_struct_value_value()->::PROTOBUF_NAMESPACE_ID::Value::MergeFrom(
          from._internal_struct_value_value());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_struct_value()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
          from._internal_struct_value());
    }
  }
  if (from._internal_int64_value() != 0) {
    _this->_internal_set_int64_value(from._internal_int64_value());
  }
  if (from._internal_uint64_value() != 0) {
    _this->_internal_set_uint64_value(from._internal_uint64_value());
  }
  if (from._internal_int32_value() != 0) {
    _this->_internal_set_int32_value(from._internal_int32_value());
  }
  if (from._internal_uint32_value() != 0) {
    _this->_internal_set_uint32_value(from._internal_uint32_value());
  }
  if (from._internal_bool_value() != 0) {
    _this->_internal_set_bool_value(from._internal_bool_value());
  }
  if (from._internal_enum_value() != 0) {
    _this->_internal_set_enum_value(from._internal_enum_value());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double), "Code assumes ::uint64_t and double are the same size.");
  double tmp_double_value = from._internal_double_value();
  ::uint64_t raw_double_value;
  memcpy(&raw_double_value, &tmp_double_value, sizeof(tmp_double_value));
  if (raw_double_value != 0) {
    _this->_internal_set_double_value(from._internal_double_value());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_float_value = from._internal_float_value();
  ::uint32_t raw_float_value;
  memcpy(&raw_float_value, &tmp_float_value, sizeof(tmp_float_value));
  if (raw_float_value != 0) {
    _this->_internal_set_float_value(from._internal_float_value());
  }
  switch (from.oneof_value_case()) {
    case kOneofBoolValue: {
      _this->_internal_set_oneof_bool_value(from._internal_oneof_bool_value());
      break;
    }
    case kOneofStringValue: {
      _this->_internal_set_oneof_string_value(from._internal_oneof_string_value());
      break;
    }
    case ONEOF_VALUE_NOT_SET: {
      break;
    }
  }
  switch (from.nested_oneof_value_case()) {
    case kNestedOneofValueOne: {
      _this->_internal_mutable_nested_oneof_value_one()->::struqt::demo::v3::Proto3Message::MergeFrom(
          from._internal_nested_oneof_value_one());
      break;
    }
    case NESTED_ONEOF_VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Proto3Message::CopyFrom(const Proto3Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:struqt.demo.v3.Proto3Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto3Message::IsInitialized() const {
  return true;
}

void Proto3Message::InternalSwap(Proto3Message* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_repeated_value()->InternalSwap(
      other->_internal_mutable_repeated_value());
  _internal_mutable_repeated_enum()->InternalSwap(
      other->_internal_mutable_repeated_enum());
  _impl_.map_value_.InternalSwap(&other->_impl_.map_value_);
  _impl_.map_value2_.InternalSwap(&other->_impl_.map_value2_);
  _impl_.map_value3_.InternalSwap(&other->_impl_.map_value3_);
  _impl_.map_value4_.InternalSwap(&other->_impl_.map_value4_);
  _impl_.map_value5_.InternalSwap(&other->_impl_.map_value5_);
  _impl_.map_value6_.InternalSwap(&other->_impl_.map_value6_);
  _impl_.map_value7_.InternalSwap(&other->_impl_.map_value7_);
  _impl_.map_value8_.InternalSwap(&other->_impl_.map_value8_);
  _impl_.map_value9_.InternalSwap(&other->_impl_.map_value9_);
  _impl_.map_value10_.InternalSwap(&other->_impl_.map_value10_);
  _impl_.map_value12_.InternalSwap(&other->_impl_.map_value12_);
  _impl_.map_value14_.InternalSwap(&other->_impl_.map_value14_);
  _impl_.map_value15_.InternalSwap(&other->_impl_.map_value15_);
  _internal_mutable_repeated_message()->InternalSwap(other->_internal_mutable_repeated_message());
  _impl_.map_value16_.InternalSwap(&other->_impl_.map_value16_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.string_value_, lhs_arena,
                                       &other->_impl_.string_value_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bytes_value_, lhs_arena,
                                       &other->_impl_.bytes_value_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Proto3Message, _impl_.float_value_)
      + sizeof(Proto3Message::_impl_.float_value_)
      - PROTOBUF_FIELD_OFFSET(Proto3Message, _impl_.timestamp_value_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_value_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_value_));
  swap(_impl_.oneof_value_, other->_impl_.oneof_value_);
  swap(_impl_.nested_oneof_value_, other->_impl_.nested_oneof_value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
  swap(_impl_._oneof_case_[1], other->_impl_._oneof_case_[1]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Proto3Message::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv3_2fmessages_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv3_2fmessages_2eproto[16]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v3
}  // namespace demo
}  // namespace struqt
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::EchoValueRequest*
Arena::CreateMaybeMessage< ::struqt::demo::v3::EchoValueRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::EchoValueRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::EchoValueResponse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::EchoValueResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::EchoValueResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message_MapValueEntry_DoNotUse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message_MapValueEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message_MapValueEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message_MapValue2Entry_DoNotUse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message_MapValue2Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message_MapValue2Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message_MapValue3Entry_DoNotUse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message_MapValue3Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message_MapValue3Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message_MapValue4Entry_DoNotUse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message_MapValue4Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message_MapValue4Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message_MapValue5Entry_DoNotUse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message_MapValue5Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message_MapValue5Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message_MapValue6Entry_DoNotUse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message_MapValue6Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message_MapValue6Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message_MapValue7Entry_DoNotUse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message_MapValue7Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message_MapValue7Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message_MapValue8Entry_DoNotUse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message_MapValue8Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message_MapValue8Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message_MapValue9Entry_DoNotUse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message_MapValue9Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message_MapValue9Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message_MapValue10Entry_DoNotUse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message_MapValue10Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message_MapValue10Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message_MapValue12Entry_DoNotUse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message_MapValue12Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message_MapValue12Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message_MapValue14Entry_DoNotUse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message_MapValue14Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message_MapValue14Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message_MapValue15Entry_DoNotUse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message_MapValue15Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message_MapValue15Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message_MapValue16Entry_DoNotUse*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message_MapValue16Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message_MapValue16Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v3::Proto3Message*
Arena::CreateMaybeMessage< ::struqt::demo::v3::Proto3Message >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v3::Proto3Message >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
