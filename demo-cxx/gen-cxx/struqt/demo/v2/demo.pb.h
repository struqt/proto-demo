// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: struqt/demo/v2/demo.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_struqt_2fdemo_2fv2_2fdemo_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_struqt_2fdemo_2fv2_2fdemo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/protobuf/descriptor.pb.h"
#include "google/protobuf/struct.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "struqt/common/v1/common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_struqt_2fdemo_2fv2_2fdemo_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_struqt_2fdemo_2fv2_2fdemo_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto;
namespace struqt {
namespace demo {
namespace v2 {
class DemoOption;
struct DemoOptionDefaultTypeInternal;
extern DemoOptionDefaultTypeInternal _DemoOption_default_instance_;
class EchoRequest;
struct EchoRequestDefaultTypeInternal;
extern EchoRequestDefaultTypeInternal _EchoRequest_default_instance_;
class EchoResponse;
struct EchoResponseDefaultTypeInternal;
extern EchoResponseDefaultTypeInternal _EchoResponse_default_instance_;
class JsonRpcErrorObject;
struct JsonRpcErrorObjectDefaultTypeInternal;
extern JsonRpcErrorObjectDefaultTypeInternal _JsonRpcErrorObject_default_instance_;
class JsonRpcRequest;
struct JsonRpcRequestDefaultTypeInternal;
extern JsonRpcRequestDefaultTypeInternal _JsonRpcRequest_default_instance_;
class JsonRpcResponse;
struct JsonRpcResponseDefaultTypeInternal;
extern JsonRpcResponseDefaultTypeInternal _JsonRpcResponse_default_instance_;
}  // namespace v2
}  // namespace demo
}  // namespace struqt
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace struqt {
namespace demo {
namespace v2 {
enum DemoOption_Command : int {
  DemoOption_Command_COMMAND_UNSPECIFIED = 0,
  DemoOption_Command_COMMAND_SERVER_INFO_Q2S = 10111,
  DemoOption_Command_COMMAND_SERVER_INFO_R2C = 10112,
  DemoOption_Command_DemoOption_Command_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  DemoOption_Command_DemoOption_Command_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool DemoOption_Command_IsValid(int value);
extern const uint32_t DemoOption_Command_internal_data_[];
constexpr DemoOption_Command DemoOption_Command_Command_MIN = static_cast<DemoOption_Command>(0);
constexpr DemoOption_Command DemoOption_Command_Command_MAX = static_cast<DemoOption_Command>(10112);
constexpr int DemoOption_Command_Command_ARRAYSIZE = 10112 + 1;
const ::google::protobuf::EnumDescriptor*
DemoOption_Command_descriptor();
template <typename T>
const std::string& DemoOption_Command_Name(T value) {
  static_assert(std::is_same<T, DemoOption_Command>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Command_Name().");
  return ::google::protobuf::internal::NameOfEnum(DemoOption_Command_descriptor(), value);
}
inline bool DemoOption_Command_Parse(absl::string_view name, DemoOption_Command* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DemoOption_Command>(
      DemoOption_Command_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class EchoResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:struqt.demo.v2.EchoResponse) */ {
 public:
  inline EchoResponse() : EchoResponse(nullptr) {}
  ~EchoResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EchoResponse(::google::protobuf::internal::ConstantInitialized);

  inline EchoResponse(const EchoResponse& from)
      : EchoResponse(nullptr, from) {}
  EchoResponse(EchoResponse&& from) noexcept
    : EchoResponse() {
    *this = ::std::move(from);
  }

  inline EchoResponse& operator=(const EchoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EchoResponse& operator=(EchoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EchoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EchoResponse* internal_default_instance() {
    return reinterpret_cast<const EchoResponse*>(
               &_EchoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(EchoResponse& a, EchoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(EchoResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EchoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EchoResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EchoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EchoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EchoResponse& from) {
    EchoResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EchoResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "struqt.demo.v2.EchoResponse";
  }
  protected:
  explicit EchoResponse(::google::protobuf::Arena* arena);
  EchoResponse(::google::protobuf::Arena* arena, const EchoResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kVersionFieldNumber = 1,
  };
  // string value = 2;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // int32 version = 1;
  void clear_version() ;
  ::int32_t version() const;
  void set_version(::int32_t value);

  private:
  ::int32_t _internal_version() const;
  void _internal_set_version(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:struqt.demo.v2.EchoResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      41, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::int32_t version_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_struqt_2fdemo_2fv2_2fdemo_2eproto;
};// -------------------------------------------------------------------

class EchoRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:struqt.demo.v2.EchoRequest) */ {
 public:
  inline EchoRequest() : EchoRequest(nullptr) {}
  ~EchoRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EchoRequest(::google::protobuf::internal::ConstantInitialized);

  inline EchoRequest(const EchoRequest& from)
      : EchoRequest(nullptr, from) {}
  EchoRequest(EchoRequest&& from) noexcept
    : EchoRequest() {
    *this = ::std::move(from);
  }

  inline EchoRequest& operator=(const EchoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EchoRequest& operator=(EchoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EchoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EchoRequest* internal_default_instance() {
    return reinterpret_cast<const EchoRequest*>(
               &_EchoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(EchoRequest& a, EchoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(EchoRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EchoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EchoRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EchoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EchoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EchoRequest& from) {
    EchoRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EchoRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "struqt.demo.v2.EchoRequest";
  }
  protected:
  explicit EchoRequest(::google::protobuf::Arena* arena);
  EchoRequest(::google::protobuf::Arena* arena, const EchoRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
  };
  // string value = 2;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:struqt.demo.v2.EchoRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      40, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_struqt_2fdemo_2fv2_2fdemo_2eproto;
};// -------------------------------------------------------------------

class DemoOption final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:struqt.demo.v2.DemoOption) */ {
 public:
  inline DemoOption() : DemoOption(nullptr) {}
  ~DemoOption() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DemoOption(::google::protobuf::internal::ConstantInitialized);

  inline DemoOption(const DemoOption& from)
      : DemoOption(nullptr, from) {}
  DemoOption(DemoOption&& from) noexcept
    : DemoOption() {
    *this = ::std::move(from);
  }

  inline DemoOption& operator=(const DemoOption& from) {
    CopyFrom(from);
    return *this;
  }
  inline DemoOption& operator=(DemoOption&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DemoOption& default_instance() {
    return *internal_default_instance();
  }
  static inline const DemoOption* internal_default_instance() {
    return reinterpret_cast<const DemoOption*>(
               &_DemoOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DemoOption& a, DemoOption& b) {
    a.Swap(&b);
  }
  inline void Swap(DemoOption* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DemoOption* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DemoOption* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DemoOption>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DemoOption& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DemoOption& from) {
    DemoOption::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DemoOption* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "struqt.demo.v2.DemoOption";
  }
  protected:
  explicit DemoOption(::google::protobuf::Arena* arena);
  DemoOption(::google::protobuf::Arena* arena, const DemoOption& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Command = DemoOption_Command;
  static constexpr Command COMMAND_UNSPECIFIED = DemoOption_Command_COMMAND_UNSPECIFIED;
  static constexpr Command COMMAND_SERVER_INFO_Q2S = DemoOption_Command_COMMAND_SERVER_INFO_Q2S;
  static constexpr Command COMMAND_SERVER_INFO_R2C = DemoOption_Command_COMMAND_SERVER_INFO_R2C;
  static inline bool Command_IsValid(int value) {
    return DemoOption_Command_IsValid(value);
  }
  static constexpr Command Command_MIN = DemoOption_Command_Command_MIN;
  static constexpr Command Command_MAX = DemoOption_Command_Command_MAX;
  static constexpr int Command_ARRAYSIZE = DemoOption_Command_Command_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Command_descriptor() {
    return DemoOption_Command_descriptor();
  }
  template <typename T>
  static inline const std::string& Command_Name(T value) {
    return DemoOption_Command_Name(value);
  }
  static inline bool Command_Parse(absl::string_view name, Command* value) {
    return DemoOption_Command_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kHandlerFieldNumber = 999997,
    kUriFieldNumber = 999998,
    kRetryFieldNumber = 999993,
    kQueryFieldNumber = 999994,
    kAsyncFieldNumber = 999992,
    kTimeoutFieldNumber = 999995,
    kIdFieldNumber = 999999,
  };
  // string handler = 999997;
  void clear_handler() ;
  const std::string& handler() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_handler(Arg_&& arg, Args_... args);
  std::string* mutable_handler();
  PROTOBUF_NODISCARD std::string* release_handler();
  void set_allocated_handler(std::string* value);

  private:
  const std::string& _internal_handler() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_handler(
      const std::string& value);
  std::string* _internal_mutable_handler();

  public:
  // string uri = 999998;
  void clear_uri() ;
  const std::string& uri() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uri(Arg_&& arg, Args_... args);
  std::string* mutable_uri();
  PROTOBUF_NODISCARD std::string* release_uri();
  void set_allocated_uri(std::string* value);

  private:
  const std::string& _internal_uri() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uri(
      const std::string& value);
  std::string* _internal_mutable_uri();

  public:
  // int32 retry = 999993;
  void clear_retry() ;
  ::int32_t retry() const;
  void set_retry(::int32_t value);

  private:
  ::int32_t _internal_retry() const;
  void _internal_set_retry(::int32_t value);

  public:
  // bool query = 999994;
  void clear_query() ;
  bool query() const;
  void set_query(bool value);

  private:
  bool _internal_query() const;
  void _internal_set_query(bool value);

  public:
  // bool async = 999992;
  void clear_async() ;
  bool async() const;
  void set_async(bool value);

  private:
  bool _internal_async() const;
  void _internal_set_async(bool value);

  public:
  // int32 timeout = 999995;
  void clear_timeout() ;
  ::int32_t timeout() const;
  void set_timeout(::int32_t value);

  private:
  ::int32_t _internal_timeout() const;
  void _internal_set_timeout(::int32_t value);

  public:
  // .struqt.demo.v2.DemoOption.Command id = 999999;
  void clear_id() ;
  ::struqt::demo::v2::DemoOption_Command id() const;
  void set_id(::struqt::demo::v2::DemoOption_Command value);

  private:
  ::struqt::demo::v2::DemoOption_Command _internal_id() const;
  void _internal_set_id(::struqt::demo::v2::DemoOption_Command value);

  public:
  // @@protoc_insertion_point(class_scope:struqt.demo.v2.DemoOption)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 7, 0,
      44, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr handler_;
    ::google::protobuf::internal::ArenaStringPtr uri_;
    ::int32_t retry_;
    bool query_;
    bool async_;
    ::int32_t timeout_;
    int id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_struqt_2fdemo_2fv2_2fdemo_2eproto;
};// -------------------------------------------------------------------

class JsonRpcRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:struqt.demo.v2.JsonRpcRequest) */ {
 public:
  inline JsonRpcRequest() : JsonRpcRequest(nullptr) {}
  ~JsonRpcRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JsonRpcRequest(::google::protobuf::internal::ConstantInitialized);

  inline JsonRpcRequest(const JsonRpcRequest& from)
      : JsonRpcRequest(nullptr, from) {}
  JsonRpcRequest(JsonRpcRequest&& from) noexcept
    : JsonRpcRequest() {
    *this = ::std::move(from);
  }

  inline JsonRpcRequest& operator=(const JsonRpcRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline JsonRpcRequest& operator=(JsonRpcRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JsonRpcRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const JsonRpcRequest* internal_default_instance() {
    return reinterpret_cast<const JsonRpcRequest*>(
               &_JsonRpcRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(JsonRpcRequest& a, JsonRpcRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(JsonRpcRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JsonRpcRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JsonRpcRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JsonRpcRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JsonRpcRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JsonRpcRequest& from) {
    JsonRpcRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(JsonRpcRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "struqt.demo.v2.JsonRpcRequest";
  }
  protected:
  explicit JsonRpcRequest(::google::protobuf::Arena* arena);
  JsonRpcRequest(::google::protobuf::Arena* arena, const JsonRpcRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMethodFieldNumber = 2,
    kParamsFieldNumber = 3,
    kIdFieldNumber = 4,
  };
  // string method = 2;
  void clear_method() ;
  const std::string& method() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_method(Arg_&& arg, Args_... args);
  std::string* mutable_method();
  PROTOBUF_NODISCARD std::string* release_method();
  void set_allocated_method(std::string* value);

  private:
  const std::string& _internal_method() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_method(
      const std::string& value);
  std::string* _internal_mutable_method();

  public:
  // .google.protobuf.Value params = 3;
  bool has_params() const;
  void clear_params() ;
  const ::google::protobuf::Value& params() const;
  PROTOBUF_NODISCARD ::google::protobuf::Value* release_params();
  ::google::protobuf::Value* mutable_params();
  void set_allocated_params(::google::protobuf::Value* value);
  void unsafe_arena_set_allocated_params(::google::protobuf::Value* value);
  ::google::protobuf::Value* unsafe_arena_release_params();

  private:
  const ::google::protobuf::Value& _internal_params() const;
  ::google::protobuf::Value* _internal_mutable_params();

  public:
  // .google.protobuf.Value id = 4;
  bool has_id() const;
  void clear_id() ;
  const ::google::protobuf::Value& id() const;
  PROTOBUF_NODISCARD ::google::protobuf::Value* release_id();
  ::google::protobuf::Value* mutable_id();
  void set_allocated_id(::google::protobuf::Value* value);
  void unsafe_arena_set_allocated_id(::google::protobuf::Value* value);
  ::google::protobuf::Value* unsafe_arena_release_id();

  private:
  const ::google::protobuf::Value& _internal_id() const;
  ::google::protobuf::Value* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:struqt.demo.v2.JsonRpcRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr method_;
    ::google::protobuf::Value* params_;
    ::google::protobuf::Value* id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_struqt_2fdemo_2fv2_2fdemo_2eproto;
};// -------------------------------------------------------------------

class JsonRpcErrorObject final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:struqt.demo.v2.JsonRpcErrorObject) */ {
 public:
  inline JsonRpcErrorObject() : JsonRpcErrorObject(nullptr) {}
  ~JsonRpcErrorObject() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JsonRpcErrorObject(::google::protobuf::internal::ConstantInitialized);

  inline JsonRpcErrorObject(const JsonRpcErrorObject& from)
      : JsonRpcErrorObject(nullptr, from) {}
  JsonRpcErrorObject(JsonRpcErrorObject&& from) noexcept
    : JsonRpcErrorObject() {
    *this = ::std::move(from);
  }

  inline JsonRpcErrorObject& operator=(const JsonRpcErrorObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline JsonRpcErrorObject& operator=(JsonRpcErrorObject&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JsonRpcErrorObject& default_instance() {
    return *internal_default_instance();
  }
  static inline const JsonRpcErrorObject* internal_default_instance() {
    return reinterpret_cast<const JsonRpcErrorObject*>(
               &_JsonRpcErrorObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(JsonRpcErrorObject& a, JsonRpcErrorObject& b) {
    a.Swap(&b);
  }
  inline void Swap(JsonRpcErrorObject* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JsonRpcErrorObject* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JsonRpcErrorObject* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JsonRpcErrorObject>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JsonRpcErrorObject& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JsonRpcErrorObject& from) {
    JsonRpcErrorObject::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(JsonRpcErrorObject* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "struqt.demo.v2.JsonRpcErrorObject";
  }
  protected:
  explicit JsonRpcErrorObject(::google::protobuf::Arena* arena);
  JsonRpcErrorObject(::google::protobuf::Arena* arena, const JsonRpcErrorObject& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 2,
    kDataFieldNumber = 3,
    kV1DFieldNumber = 10,
    kCodeFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // .google.protobuf.Value data = 3;
  bool has_data() const;
  void clear_data() ;
  const ::google::protobuf::Value& data() const;
  PROTOBUF_NODISCARD ::google::protobuf::Value* release_data();
  ::google::protobuf::Value* mutable_data();
  void set_allocated_data(::google::protobuf::Value* value);
  void unsafe_arena_set_allocated_data(::google::protobuf::Value* value);
  ::google::protobuf::Value* unsafe_arena_release_data();

  private:
  const ::google::protobuf::Value& _internal_data() const;
  ::google::protobuf::Value* _internal_mutable_data();

  public:
  // .struqt.common.v1.Dummy v1d = 10;
  bool has_v1d() const;
  void clear_v1d() ;
  const ::struqt::common::v1::Dummy& v1d() const;
  PROTOBUF_NODISCARD ::struqt::common::v1::Dummy* release_v1d();
  ::struqt::common::v1::Dummy* mutable_v1d();
  void set_allocated_v1d(::struqt::common::v1::Dummy* value);
  void unsafe_arena_set_allocated_v1d(::struqt::common::v1::Dummy* value);
  ::struqt::common::v1::Dummy* unsafe_arena_release_v1d();

  private:
  const ::struqt::common::v1::Dummy& _internal_v1d() const;
  ::struqt::common::v1::Dummy* _internal_mutable_v1d();

  public:
  // int32 code = 1;
  void clear_code() ;
  ::int32_t code() const;
  void set_code(::int32_t value);

  private:
  ::int32_t _internal_code() const;
  void _internal_set_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:struqt.demo.v2.JsonRpcErrorObject)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::Value* data_;
    ::struqt::common::v1::Dummy* v1d_;
    ::int32_t code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_struqt_2fdemo_2fv2_2fdemo_2eproto;
};// -------------------------------------------------------------------

class JsonRpcResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:struqt.demo.v2.JsonRpcResponse) */ {
 public:
  inline JsonRpcResponse() : JsonRpcResponse(nullptr) {}
  ~JsonRpcResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JsonRpcResponse(::google::protobuf::internal::ConstantInitialized);

  inline JsonRpcResponse(const JsonRpcResponse& from)
      : JsonRpcResponse(nullptr, from) {}
  JsonRpcResponse(JsonRpcResponse&& from) noexcept
    : JsonRpcResponse() {
    *this = ::std::move(from);
  }

  inline JsonRpcResponse& operator=(const JsonRpcResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline JsonRpcResponse& operator=(JsonRpcResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JsonRpcResponse& default_instance() {
    return *internal_default_instance();
  }
  enum OneOfCase {
    kResult = 2,
    kError = 3,
    ONE_OF_NOT_SET = 0,
  };

  static inline const JsonRpcResponse* internal_default_instance() {
    return reinterpret_cast<const JsonRpcResponse*>(
               &_JsonRpcResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(JsonRpcResponse& a, JsonRpcResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(JsonRpcResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JsonRpcResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JsonRpcResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JsonRpcResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JsonRpcResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JsonRpcResponse& from) {
    JsonRpcResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(JsonRpcResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "struqt.demo.v2.JsonRpcResponse";
  }
  protected:
  explicit JsonRpcResponse(::google::protobuf::Arena* arena);
  JsonRpcResponse(::google::protobuf::Arena* arena, const JsonRpcResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 4,
    kResultFieldNumber = 2,
    kErrorFieldNumber = 3,
  };
  // .google.protobuf.Value id = 4;
  bool has_id() const;
  void clear_id() ;
  const ::google::protobuf::Value& id() const;
  PROTOBUF_NODISCARD ::google::protobuf::Value* release_id();
  ::google::protobuf::Value* mutable_id();
  void set_allocated_id(::google::protobuf::Value* value);
  void unsafe_arena_set_allocated_id(::google::protobuf::Value* value);
  ::google::protobuf::Value* unsafe_arena_release_id();

  private:
  const ::google::protobuf::Value& _internal_id() const;
  ::google::protobuf::Value* _internal_mutable_id();

  public:
  // .google.protobuf.Value result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;

  public:
  void clear_result() ;
  const ::google::protobuf::Value& result() const;
  PROTOBUF_NODISCARD ::google::protobuf::Value* release_result();
  ::google::protobuf::Value* mutable_result();
  void set_allocated_result(::google::protobuf::Value* value);
  void unsafe_arena_set_allocated_result(::google::protobuf::Value* value);
  ::google::protobuf::Value* unsafe_arena_release_result();

  private:
  const ::google::protobuf::Value& _internal_result() const;
  ::google::protobuf::Value* _internal_mutable_result();

  public:
  // .struqt.demo.v2.JsonRpcErrorObject error = 3;
  bool has_error() const;
  private:
  bool _internal_has_error() const;

  public:
  void clear_error() ;
  const ::struqt::demo::v2::JsonRpcErrorObject& error() const;
  PROTOBUF_NODISCARD ::struqt::demo::v2::JsonRpcErrorObject* release_error();
  ::struqt::demo::v2::JsonRpcErrorObject* mutable_error();
  void set_allocated_error(::struqt::demo::v2::JsonRpcErrorObject* value);
  void unsafe_arena_set_allocated_error(::struqt::demo::v2::JsonRpcErrorObject* value);
  ::struqt::demo::v2::JsonRpcErrorObject* unsafe_arena_release_error();

  private:
  const ::struqt::demo::v2::JsonRpcErrorObject& _internal_error() const;
  ::struqt::demo::v2::JsonRpcErrorObject* _internal_mutable_error();

  public:
  void clear_one_of();
  OneOfCase one_of_case() const;
  // @@protoc_insertion_point(class_scope:struqt.demo.v2.JsonRpcResponse)
 private:
  class _Internal;
  void set_has_result();
  void set_has_error();

  inline bool has_one_of() const;
  inline void clear_has_one_of();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Value* id_;
    union OneOfUnion {
      constexpr OneOfUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Value* result_;
      ::struqt::demo::v2::JsonRpcErrorObject* error_;
    } one_of_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_struqt_2fdemo_2fv2_2fdemo_2eproto;
};

// ===================================================================



static const int kCommandFieldNumber = 50001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::struqt::demo::v2::DemoOption >, 11, false >
  command;

// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DemoOption

// .struqt.demo.v2.DemoOption.Command id = 999999;
inline void DemoOption::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::struqt::demo::v2::DemoOption_Command DemoOption::id() const {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.DemoOption.id)
  return _internal_id();
}
inline void DemoOption::set_id(::struqt::demo::v2::DemoOption_Command value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:struqt.demo.v2.DemoOption.id)
}
inline ::struqt::demo::v2::DemoOption_Command DemoOption::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::struqt::demo::v2::DemoOption_Command>(_impl_.id_);
}
inline void DemoOption::_internal_set_id(::struqt::demo::v2::DemoOption_Command value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string uri = 999998;
inline void DemoOption::clear_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uri_.ClearToEmpty();
}
inline const std::string& DemoOption::uri() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.DemoOption.uri)
  return _internal_uri();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DemoOption::set_uri(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uri_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:struqt.demo.v2.DemoOption.uri)
}
inline std::string* DemoOption::mutable_uri() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uri();
  // @@protoc_insertion_point(field_mutable:struqt.demo.v2.DemoOption.uri)
  return _s;
}
inline const std::string& DemoOption::_internal_uri() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uri_.Get();
}
inline void DemoOption::_internal_set_uri(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uri_.Set(value, GetArena());
}
inline std::string* DemoOption::_internal_mutable_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.uri_.Mutable( GetArena());
}
inline std::string* DemoOption::release_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:struqt.demo.v2.DemoOption.uri)
  return _impl_.uri_.Release();
}
inline void DemoOption::set_allocated_uri(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uri_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uri_.IsDefault()) {
          _impl_.uri_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:struqt.demo.v2.DemoOption.uri)
}

// string handler = 999997;
inline void DemoOption::clear_handler() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.handler_.ClearToEmpty();
}
inline const std::string& DemoOption::handler() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.DemoOption.handler)
  return _internal_handler();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DemoOption::set_handler(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.handler_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:struqt.demo.v2.DemoOption.handler)
}
inline std::string* DemoOption::mutable_handler() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_handler();
  // @@protoc_insertion_point(field_mutable:struqt.demo.v2.DemoOption.handler)
  return _s;
}
inline const std::string& DemoOption::_internal_handler() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.handler_.Get();
}
inline void DemoOption::_internal_set_handler(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.handler_.Set(value, GetArena());
}
inline std::string* DemoOption::_internal_mutable_handler() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.handler_.Mutable( GetArena());
}
inline std::string* DemoOption::release_handler() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:struqt.demo.v2.DemoOption.handler)
  return _impl_.handler_.Release();
}
inline void DemoOption::set_allocated_handler(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.handler_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.handler_.IsDefault()) {
          _impl_.handler_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:struqt.demo.v2.DemoOption.handler)
}

// int32 timeout = 999995;
inline void DemoOption::clear_timeout() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timeout_ = 0;
}
inline ::int32_t DemoOption::timeout() const {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.DemoOption.timeout)
  return _internal_timeout();
}
inline void DemoOption::set_timeout(::int32_t value) {
  _internal_set_timeout(value);
  // @@protoc_insertion_point(field_set:struqt.demo.v2.DemoOption.timeout)
}
inline ::int32_t DemoOption::_internal_timeout() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timeout_;
}
inline void DemoOption::_internal_set_timeout(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timeout_ = value;
}

// bool query = 999994;
inline void DemoOption::clear_query() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.query_ = false;
}
inline bool DemoOption::query() const {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.DemoOption.query)
  return _internal_query();
}
inline void DemoOption::set_query(bool value) {
  _internal_set_query(value);
  // @@protoc_insertion_point(field_set:struqt.demo.v2.DemoOption.query)
}
inline bool DemoOption::_internal_query() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.query_;
}
inline void DemoOption::_internal_set_query(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.query_ = value;
}

// int32 retry = 999993;
inline void DemoOption::clear_retry() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.retry_ = 0;
}
inline ::int32_t DemoOption::retry() const {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.DemoOption.retry)
  return _internal_retry();
}
inline void DemoOption::set_retry(::int32_t value) {
  _internal_set_retry(value);
  // @@protoc_insertion_point(field_set:struqt.demo.v2.DemoOption.retry)
}
inline ::int32_t DemoOption::_internal_retry() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.retry_;
}
inline void DemoOption::_internal_set_retry(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.retry_ = value;
}

// bool async = 999992;
inline void DemoOption::clear_async() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.async_ = false;
}
inline bool DemoOption::async() const {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.DemoOption.async)
  return _internal_async();
}
inline void DemoOption::set_async(bool value) {
  _internal_set_async(value);
  // @@protoc_insertion_point(field_set:struqt.demo.v2.DemoOption.async)
}
inline bool DemoOption::_internal_async() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.async_;
}
inline void DemoOption::_internal_set_async(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.async_ = value;
}

// -------------------------------------------------------------------

// EchoRequest

// string value = 2;
inline void EchoRequest::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& EchoRequest::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.EchoRequest.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EchoRequest::set_value(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:struqt.demo.v2.EchoRequest.value)
}
inline std::string* EchoRequest::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:struqt.demo.v2.EchoRequest.value)
  return _s;
}
inline const std::string& EchoRequest::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_.Get();
}
inline void EchoRequest::_internal_set_value(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.Set(value, GetArena());
}
inline std::string* EchoRequest::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* EchoRequest::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:struqt.demo.v2.EchoRequest.value)
  return _impl_.value_.Release();
}
inline void EchoRequest::set_allocated_value(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:struqt.demo.v2.EchoRequest.value)
}

// -------------------------------------------------------------------

// EchoResponse

// int32 version = 1;
inline void EchoResponse::clear_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_ = 0;
}
inline ::int32_t EchoResponse::version() const {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.EchoResponse.version)
  return _internal_version();
}
inline void EchoResponse::set_version(::int32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:struqt.demo.v2.EchoResponse.version)
}
inline ::int32_t EchoResponse::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_;
}
inline void EchoResponse::_internal_set_version(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_ = value;
}

// string value = 2;
inline void EchoResponse::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& EchoResponse::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.EchoResponse.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EchoResponse::set_value(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:struqt.demo.v2.EchoResponse.value)
}
inline std::string* EchoResponse::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:struqt.demo.v2.EchoResponse.value)
  return _s;
}
inline const std::string& EchoResponse::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_.Get();
}
inline void EchoResponse::_internal_set_value(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.Set(value, GetArena());
}
inline std::string* EchoResponse::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* EchoResponse::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:struqt.demo.v2.EchoResponse.value)
  return _impl_.value_.Release();
}
inline void EchoResponse::set_allocated_value(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:struqt.demo.v2.EchoResponse.value)
}

// -------------------------------------------------------------------

// JsonRpcRequest

// string method = 2;
inline void JsonRpcRequest::clear_method() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.method_.ClearToEmpty();
}
inline const std::string& JsonRpcRequest::method() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.JsonRpcRequest.method)
  return _internal_method();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JsonRpcRequest::set_method(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.method_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:struqt.demo.v2.JsonRpcRequest.method)
}
inline std::string* JsonRpcRequest::mutable_method() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_method();
  // @@protoc_insertion_point(field_mutable:struqt.demo.v2.JsonRpcRequest.method)
  return _s;
}
inline const std::string& JsonRpcRequest::_internal_method() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.method_.Get();
}
inline void JsonRpcRequest::_internal_set_method(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.method_.Set(value, GetArena());
}
inline std::string* JsonRpcRequest::_internal_mutable_method() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.method_.Mutable( GetArena());
}
inline std::string* JsonRpcRequest::release_method() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:struqt.demo.v2.JsonRpcRequest.method)
  return _impl_.method_.Release();
}
inline void JsonRpcRequest::set_allocated_method(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.method_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.method_.IsDefault()) {
          _impl_.method_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:struqt.demo.v2.JsonRpcRequest.method)
}

// .google.protobuf.Value params = 3;
inline bool JsonRpcRequest::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::google::protobuf::Value& JsonRpcRequest::_internal_params() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Value* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Value&>(::google::protobuf::_Value_default_instance_);
}
inline const ::google::protobuf::Value& JsonRpcRequest::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.JsonRpcRequest.params)
  return _internal_params();
}
inline void JsonRpcRequest::unsafe_arena_set_allocated_params(::google::protobuf::Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::google::protobuf::Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:struqt.demo.v2.JsonRpcRequest.params)
}
inline ::google::protobuf::Value* JsonRpcRequest::release_params() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Value* released = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Value* JsonRpcRequest::unsafe_arena_release_params() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:struqt.demo.v2.JsonRpcRequest.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Value* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::google::protobuf::Value* JsonRpcRequest::_internal_mutable_params() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Value>(GetArena());
    _impl_.params_ = reinterpret_cast<::google::protobuf::Value*>(p);
  }
  return _impl_.params_;
}
inline ::google::protobuf::Value* JsonRpcRequest::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Value* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:struqt.demo.v2.JsonRpcRequest.params)
  return _msg;
}
inline void JsonRpcRequest::set_allocated_params(::google::protobuf::Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::google::protobuf::Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:struqt.demo.v2.JsonRpcRequest.params)
}

// .google.protobuf.Value id = 4;
inline bool JsonRpcRequest::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.id_ != nullptr);
  return value;
}
inline const ::google::protobuf::Value& JsonRpcRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Value* p = _impl_.id_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Value&>(::google::protobuf::_Value_default_instance_);
}
inline const ::google::protobuf::Value& JsonRpcRequest::id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.JsonRpcRequest.id)
  return _internal_id();
}
inline void JsonRpcRequest::unsafe_arena_set_allocated_id(::google::protobuf::Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.id_);
  }
  _impl_.id_ = reinterpret_cast<::google::protobuf::Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:struqt.demo.v2.JsonRpcRequest.id)
}
inline ::google::protobuf::Value* JsonRpcRequest::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Value* released = _impl_.id_;
  _impl_.id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Value* JsonRpcRequest::unsafe_arena_release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:struqt.demo.v2.JsonRpcRequest.id)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Value* temp = _impl_.id_;
  _impl_.id_ = nullptr;
  return temp;
}
inline ::google::protobuf::Value* JsonRpcRequest::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.id_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Value>(GetArena());
    _impl_.id_ = reinterpret_cast<::google::protobuf::Value*>(p);
  }
  return _impl_.id_;
}
inline ::google::protobuf::Value* JsonRpcRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Value* _msg = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:struqt.demo.v2.JsonRpcRequest.id)
  return _msg;
}
inline void JsonRpcRequest::set_allocated_id(::google::protobuf::Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.id_ = reinterpret_cast<::google::protobuf::Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:struqt.demo.v2.JsonRpcRequest.id)
}

// -------------------------------------------------------------------

// JsonRpcErrorObject

// int32 code = 1;
inline void JsonRpcErrorObject::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_ = 0;
}
inline ::int32_t JsonRpcErrorObject::code() const {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.JsonRpcErrorObject.code)
  return _internal_code();
}
inline void JsonRpcErrorObject::set_code(::int32_t value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:struqt.demo.v2.JsonRpcErrorObject.code)
}
inline ::int32_t JsonRpcErrorObject::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_;
}
inline void JsonRpcErrorObject::_internal_set_code(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_ = value;
}

// string message = 2;
inline void JsonRpcErrorObject::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& JsonRpcErrorObject::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.JsonRpcErrorObject.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JsonRpcErrorObject::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:struqt.demo.v2.JsonRpcErrorObject.message)
}
inline std::string* JsonRpcErrorObject::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:struqt.demo.v2.JsonRpcErrorObject.message)
  return _s;
}
inline const std::string& JsonRpcErrorObject::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void JsonRpcErrorObject::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* JsonRpcErrorObject::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* JsonRpcErrorObject::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:struqt.demo.v2.JsonRpcErrorObject.message)
  return _impl_.message_.Release();
}
inline void JsonRpcErrorObject::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:struqt.demo.v2.JsonRpcErrorObject.message)
}

// .google.protobuf.Value data = 3;
inline bool JsonRpcErrorObject::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_ != nullptr);
  return value;
}
inline const ::google::protobuf::Value& JsonRpcErrorObject::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Value* p = _impl_.data_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Value&>(::google::protobuf::_Value_default_instance_);
}
inline const ::google::protobuf::Value& JsonRpcErrorObject::data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.JsonRpcErrorObject.data)
  return _internal_data();
}
inline void JsonRpcErrorObject::unsafe_arena_set_allocated_data(::google::protobuf::Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_);
  }
  _impl_.data_ = reinterpret_cast<::google::protobuf::Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:struqt.demo.v2.JsonRpcErrorObject.data)
}
inline ::google::protobuf::Value* JsonRpcErrorObject::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Value* released = _impl_.data_;
  _impl_.data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Value* JsonRpcErrorObject::unsafe_arena_release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:struqt.demo.v2.JsonRpcErrorObject.data)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Value* temp = _impl_.data_;
  _impl_.data_ = nullptr;
  return temp;
}
inline ::google::protobuf::Value* JsonRpcErrorObject::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.data_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Value>(GetArena());
    _impl_.data_ = reinterpret_cast<::google::protobuf::Value*>(p);
  }
  return _impl_.data_;
}
inline ::google::protobuf::Value* JsonRpcErrorObject::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Value* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:struqt.demo.v2.JsonRpcErrorObject.data)
  return _msg;
}
inline void JsonRpcErrorObject::set_allocated_data(::google::protobuf::Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.data_ = reinterpret_cast<::google::protobuf::Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:struqt.demo.v2.JsonRpcErrorObject.data)
}

// .struqt.common.v1.Dummy v1d = 10;
inline bool JsonRpcErrorObject::has_v1d() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.v1d_ != nullptr);
  return value;
}
inline const ::struqt::common::v1::Dummy& JsonRpcErrorObject::_internal_v1d() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::struqt::common::v1::Dummy* p = _impl_.v1d_;
  return p != nullptr ? *p : reinterpret_cast<const ::struqt::common::v1::Dummy&>(::struqt::common::v1::_Dummy_default_instance_);
}
inline const ::struqt::common::v1::Dummy& JsonRpcErrorObject::v1d() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.JsonRpcErrorObject.v1d)
  return _internal_v1d();
}
inline void JsonRpcErrorObject::unsafe_arena_set_allocated_v1d(::struqt::common::v1::Dummy* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.v1d_);
  }
  _impl_.v1d_ = reinterpret_cast<::struqt::common::v1::Dummy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:struqt.demo.v2.JsonRpcErrorObject.v1d)
}
inline ::struqt::common::v1::Dummy* JsonRpcErrorObject::release_v1d() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::struqt::common::v1::Dummy* released = _impl_.v1d_;
  _impl_.v1d_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::struqt::common::v1::Dummy* JsonRpcErrorObject::unsafe_arena_release_v1d() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:struqt.demo.v2.JsonRpcErrorObject.v1d)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::struqt::common::v1::Dummy* temp = _impl_.v1d_;
  _impl_.v1d_ = nullptr;
  return temp;
}
inline ::struqt::common::v1::Dummy* JsonRpcErrorObject::_internal_mutable_v1d() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.v1d_ == nullptr) {
    auto* p = CreateMaybeMessage<::struqt::common::v1::Dummy>(GetArena());
    _impl_.v1d_ = reinterpret_cast<::struqt::common::v1::Dummy*>(p);
  }
  return _impl_.v1d_;
}
inline ::struqt::common::v1::Dummy* JsonRpcErrorObject::mutable_v1d() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::struqt::common::v1::Dummy* _msg = _internal_mutable_v1d();
  // @@protoc_insertion_point(field_mutable:struqt.demo.v2.JsonRpcErrorObject.v1d)
  return _msg;
}
inline void JsonRpcErrorObject::set_allocated_v1d(::struqt::common::v1::Dummy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.v1d_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.v1d_ = reinterpret_cast<::struqt::common::v1::Dummy*>(value);
  // @@protoc_insertion_point(field_set_allocated:struqt.demo.v2.JsonRpcErrorObject.v1d)
}

// -------------------------------------------------------------------

// JsonRpcResponse

// .google.protobuf.Value result = 2;
inline bool JsonRpcResponse::has_result() const {
  return one_of_case() == kResult;
}
inline bool JsonRpcResponse::_internal_has_result() const {
  return one_of_case() == kResult;
}
inline void JsonRpcResponse::set_has_result() {
  _impl_._oneof_case_[0] = kResult;
}
inline ::google::protobuf::Value* JsonRpcResponse::release_result() {
  // @@protoc_insertion_point(field_release:struqt.demo.v2.JsonRpcResponse.result)
  if (one_of_case() == kResult) {
    clear_has_one_of();
    auto* temp = _impl_.one_of_.result_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.one_of_.result_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::protobuf::Value& JsonRpcResponse::_internal_result() const {
  return one_of_case() == kResult ? *_impl_.one_of_.result_ : reinterpret_cast<::google::protobuf::Value&>(::google::protobuf::_Value_default_instance_);
}
inline const ::google::protobuf::Value& JsonRpcResponse::result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.JsonRpcResponse.result)
  return _internal_result();
}
inline ::google::protobuf::Value* JsonRpcResponse::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_unsafe_arena_release:struqt.demo.v2.JsonRpcResponse.result)
  if (one_of_case() == kResult) {
    clear_has_one_of();
    auto* temp = _impl_.one_of_.result_;
    _impl_.one_of_.result_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void JsonRpcResponse::unsafe_arena_set_allocated_result(::google::protobuf::Value* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_one_of();
  if (value) {
    set_has_result();
    _impl_.one_of_.result_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:struqt.demo.v2.JsonRpcResponse.result)
}
inline ::google::protobuf::Value* JsonRpcResponse::_internal_mutable_result() {
  if (one_of_case() != kResult) {
    clear_one_of();
    set_has_result();
    _impl_.one_of_.result_ = CreateMaybeMessage<::google::protobuf::Value>(GetArena());
  }
  return _impl_.one_of_.result_;
}
inline ::google::protobuf::Value* JsonRpcResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Value* _msg = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:struqt.demo.v2.JsonRpcResponse.result)
  return _msg;
}

// .struqt.demo.v2.JsonRpcErrorObject error = 3;
inline bool JsonRpcResponse::has_error() const {
  return one_of_case() == kError;
}
inline bool JsonRpcResponse::_internal_has_error() const {
  return one_of_case() == kError;
}
inline void JsonRpcResponse::set_has_error() {
  _impl_._oneof_case_[0] = kError;
}
inline void JsonRpcResponse::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (one_of_case() == kError) {
    if (GetArena() == nullptr) {
      delete _impl_.one_of_.error_;
    }
    clear_has_one_of();
  }
}
inline ::struqt::demo::v2::JsonRpcErrorObject* JsonRpcResponse::release_error() {
  // @@protoc_insertion_point(field_release:struqt.demo.v2.JsonRpcResponse.error)
  if (one_of_case() == kError) {
    clear_has_one_of();
    auto* temp = _impl_.one_of_.error_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.one_of_.error_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::struqt::demo::v2::JsonRpcErrorObject& JsonRpcResponse::_internal_error() const {
  return one_of_case() == kError ? *_impl_.one_of_.error_ : reinterpret_cast<::struqt::demo::v2::JsonRpcErrorObject&>(::struqt::demo::v2::_JsonRpcErrorObject_default_instance_);
}
inline const ::struqt::demo::v2::JsonRpcErrorObject& JsonRpcResponse::error() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.JsonRpcResponse.error)
  return _internal_error();
}
inline ::struqt::demo::v2::JsonRpcErrorObject* JsonRpcResponse::unsafe_arena_release_error() {
  // @@protoc_insertion_point(field_unsafe_arena_release:struqt.demo.v2.JsonRpcResponse.error)
  if (one_of_case() == kError) {
    clear_has_one_of();
    auto* temp = _impl_.one_of_.error_;
    _impl_.one_of_.error_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void JsonRpcResponse::unsafe_arena_set_allocated_error(::struqt::demo::v2::JsonRpcErrorObject* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_one_of();
  if (value) {
    set_has_error();
    _impl_.one_of_.error_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:struqt.demo.v2.JsonRpcResponse.error)
}
inline ::struqt::demo::v2::JsonRpcErrorObject* JsonRpcResponse::_internal_mutable_error() {
  if (one_of_case() != kError) {
    clear_one_of();
    set_has_error();
    _impl_.one_of_.error_ = CreateMaybeMessage<::struqt::demo::v2::JsonRpcErrorObject>(GetArena());
  }
  return _impl_.one_of_.error_;
}
inline ::struqt::demo::v2::JsonRpcErrorObject* JsonRpcResponse::mutable_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::struqt::demo::v2::JsonRpcErrorObject* _msg = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:struqt.demo.v2.JsonRpcResponse.error)
  return _msg;
}

// .google.protobuf.Value id = 4;
inline bool JsonRpcResponse::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.id_ != nullptr);
  return value;
}
inline const ::google::protobuf::Value& JsonRpcResponse::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Value* p = _impl_.id_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Value&>(::google::protobuf::_Value_default_instance_);
}
inline const ::google::protobuf::Value& JsonRpcResponse::id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:struqt.demo.v2.JsonRpcResponse.id)
  return _internal_id();
}
inline void JsonRpcResponse::unsafe_arena_set_allocated_id(::google::protobuf::Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.id_);
  }
  _impl_.id_ = reinterpret_cast<::google::protobuf::Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:struqt.demo.v2.JsonRpcResponse.id)
}
inline ::google::protobuf::Value* JsonRpcResponse::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Value* released = _impl_.id_;
  _impl_.id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Value* JsonRpcResponse::unsafe_arena_release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:struqt.demo.v2.JsonRpcResponse.id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Value* temp = _impl_.id_;
  _impl_.id_ = nullptr;
  return temp;
}
inline ::google::protobuf::Value* JsonRpcResponse::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.id_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Value>(GetArena());
    _impl_.id_ = reinterpret_cast<::google::protobuf::Value*>(p);
  }
  return _impl_.id_;
}
inline ::google::protobuf::Value* JsonRpcResponse::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Value* _msg = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:struqt.demo.v2.JsonRpcResponse.id)
  return _msg;
}
inline void JsonRpcResponse::set_allocated_id(::google::protobuf::Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.id_ = reinterpret_cast<::google::protobuf::Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:struqt.demo.v2.JsonRpcResponse.id)
}

inline bool JsonRpcResponse::has_one_of() const {
  return one_of_case() != ONE_OF_NOT_SET;
}
inline void JsonRpcResponse::clear_has_one_of() {
  _impl_._oneof_case_[0] = ONE_OF_NOT_SET;
}
inline JsonRpcResponse::OneOfCase JsonRpcResponse::one_of_case() const {
  return JsonRpcResponse::OneOfCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace demo
}  // namespace struqt


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::struqt::demo::v2::DemoOption_Command> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::struqt::demo::v2::DemoOption_Command>() {
  return ::struqt::demo::v2::DemoOption_Command_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_struqt_2fdemo_2fv2_2fdemo_2eproto_2epb_2eh
