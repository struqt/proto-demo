// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: struqt/demo/v2/demo.proto

#include "struqt/demo/v2/demo.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace struqt {
namespace demo {
namespace v2 {
template <typename>
PROTOBUF_CONSTEXPR DemoOption::DemoOption(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.handler_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.uri_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.retry_)*/ 0

  , /*decltype(_impl_.query_)*/ false

  , /*decltype(_impl_.async_)*/ false

  , /*decltype(_impl_.timeout_)*/ 0

  , /*decltype(_impl_.id_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DemoOptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DemoOptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DemoOptionDefaultTypeInternal() {}
  union {
    DemoOption _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DemoOptionDefaultTypeInternal _DemoOption_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR EchoRequest::EchoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EchoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EchoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EchoRequestDefaultTypeInternal() {}
  union {
    EchoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EchoRequestDefaultTypeInternal _EchoRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR EchoResponse::EchoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.version_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EchoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EchoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EchoResponseDefaultTypeInternal() {}
  union {
    EchoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EchoResponseDefaultTypeInternal _EchoResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR JsonRpcRequest::JsonRpcRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.method_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.id_)*/nullptr} {}
struct JsonRpcRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JsonRpcRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JsonRpcRequestDefaultTypeInternal() {}
  union {
    JsonRpcRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JsonRpcRequestDefaultTypeInternal _JsonRpcRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR JsonRpcErrorObject::JsonRpcErrorObject(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.message_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_.v1d_)*/nullptr
  , /*decltype(_impl_.code_)*/ 0
} {}
struct JsonRpcErrorObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JsonRpcErrorObjectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JsonRpcErrorObjectDefaultTypeInternal() {}
  union {
    JsonRpcErrorObject _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JsonRpcErrorObjectDefaultTypeInternal _JsonRpcErrorObject_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR JsonRpcResponse::JsonRpcResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.id_)*/nullptr
  , /*decltype(_impl_.one_of_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct JsonRpcResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JsonRpcResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JsonRpcResponseDefaultTypeInternal() {}
  union {
    JsonRpcResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JsonRpcResponseDefaultTypeInternal _JsonRpcResponse_default_instance_;
}  // namespace v2
}  // namespace demo
}  // namespace struqt
static ::_pb::Metadata file_level_metadata_struqt_2fdemo_2fv2_2fdemo_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_struqt_2fdemo_2fv2_2fdemo_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_struqt_2fdemo_2fv2_2fdemo_2eproto = nullptr;
const ::uint32_t TableStruct_struqt_2fdemo_2fv2_2fdemo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::DemoOption, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::DemoOption, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::DemoOption, _impl_.uri_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::DemoOption, _impl_.handler_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::DemoOption, _impl_.timeout_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::DemoOption, _impl_.query_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::DemoOption, _impl_.retry_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::DemoOption, _impl_.async_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::EchoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::EchoRequest, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::EchoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::EchoResponse, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::EchoResponse, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcRequest, _impl_.method_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcRequest, _impl_.params_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcRequest, _impl_.id_),
    ~0u,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcErrorObject, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcErrorObject, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcErrorObject, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcErrorObject, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcErrorObject, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcErrorObject, _impl_.v1d_),
    ~0u,
    ~0u,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcResponse, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcResponse, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcResponse, _impl_.one_of_),
    ~0u,
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::struqt::demo::v2::DemoOption)},
        { 15, -1, -1, sizeof(::struqt::demo::v2::EchoRequest)},
        { 24, -1, -1, sizeof(::struqt::demo::v2::EchoResponse)},
        { 34, 45, -1, sizeof(::struqt::demo::v2::JsonRpcRequest)},
        { 48, 60, -1, sizeof(::struqt::demo::v2::JsonRpcErrorObject)},
        { 64, 76, -1, sizeof(::struqt::demo::v2::JsonRpcResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::struqt::demo::v2::_DemoOption_default_instance_._instance,
    &::struqt::demo::v2::_EchoRequest_default_instance_._instance,
    &::struqt::demo::v2::_EchoResponse_default_instance_._instance,
    &::struqt::demo::v2::_JsonRpcRequest_default_instance_._instance,
    &::struqt::demo::v2::_JsonRpcErrorObject_default_instance_._instance,
    &::struqt::demo::v2::_JsonRpcResponse_default_instance_._instance,
};
const char descriptor_table_protodef_struqt_2fdemo_2fv2_2fdemo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\031struqt/demo/v2/demo.proto\022\016struqt.demo"
    ".v2\032\034google/api/annotations.proto\032 googl"
    "e/protobuf/descriptor.proto\032\034google/prot"
    "obuf/struct.proto\032.protoc-gen-openapiv2/"
    "options/annotations.proto\032\035struqt/common"
    "/v1/common.proto\"\206\002\n\nDemoOption\0220\n\002id\030\277\204"
    "= \001(\0162\".struqt.demo.v2.DemoOption.Comman"
    "d\022\r\n\003uri\030\276\204= \001(\t\022\021\n\007handler\030\275\204= \001(\t\022\021\n\007t"
    "imeout\030\273\204= \001(\005\022\017\n\005query\030\272\204= \001(\010\022\017\n\005retry"
    "\030\271\204= \001(\005\022\017\n\005async\030\270\204= \001(\010\"^\n\007Command\022\027\n\023"
    "COMMAND_UNSPECIFIED\020\000\022\034\n\027COMMAND_SERVER_"
    "INFO_Q2S\020\377N\022\034\n\027COMMAND_SERVER_INFO_R2C\020\200"
    "O\":\n\013EchoRequest\022\r\n\005value\030\002 \001(\t:\034\212\265\030\030\362\243\350"
    "\003\r/demo/v2/echo\370\243\350\003\377N\".\n\014EchoResponse\022\017\n"
    "\007version\030\001 \001(\005\022\r\n\005value\030\002 \001(\t\"l\n\016JsonRpc"
    "Request\022\016\n\006method\030\002 \001(\t\022&\n\006params\030\003 \001(\0132"
    "\026.google.protobuf.Value\022\"\n\002id\030\004 \001(\0132\026.go"
    "ogle.protobuf.Value\"\177\n\022JsonRpcErrorObjec"
    "t\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022$\n\004data"
    "\030\003 \001(\0132\026.google.protobuf.Value\022$\n\003v1d\030\n "
    "\001(\0132\027.struqt.common.v1.Dummy\"\236\001\n\017JsonRpc"
    "Response\022(\n\006result\030\002 \001(\0132\026.google.protob"
    "uf.ValueH\000\0223\n\005error\030\003 \001(\0132\".struqt.demo."
    "v2.JsonRpcErrorObjectH\000\022\"\n\002id\030\004 \001(\0132\026.go"
    "ogle.protobuf.ValueB\010\n\006one_of2\200\002\n\014BasicS"
    "ervice\022[\n\004Echo\022\033.struqt.demo.v2.EchoRequ"
    "est\032\034.struqt.demo.v2.EchoResponse\"\030\202\323\344\223\002"
    "\022\"\r/demo/v2/echo:\001*\022\222\001\n\007JsonRpc\022\036.struqt"
    ".demo.v2.JsonRpcRequest\032\037.struqt.demo.v2"
    ".JsonRpcResponse\"F\222A+b)\n\016\n\nApiKeyAuth\022\000\n"
    "\027\n\006OAuth2\022\r\n\004read\n\005write\202\323\344\223\002\022\"\r/demo/v2"
    "/json:\001*:Q\n\007command\022\037.google.protobuf.Me"
    "ssageOptions\030\321\206\003 \001(\0132\032.struqt.demo.v2.De"
    "moOption\210\001\001BuZ+github.com/struqt/proto/s"
    "truqt/demo/v2;demo\252\002\016Struqt.Demo.V2\222A4\022\016"
    "\n\tgRPC Demo2\00122\020application/json:\020applic"
    "ation/jsonb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_deps[5] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
        &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
        &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
        &::descriptor_table_struqt_2fcommon_2fv1_2fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto = {
    false,
    false,
    1458,
    descriptor_table_protodef_struqt_2fdemo_2fv2_2fdemo_2eproto,
    "struqt/demo/v2/demo.proto",
    &descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_once,
    descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_deps,
    5,
    6,
    schemas,
    file_default_instances,
    TableStruct_struqt_2fdemo_2fv2_2fdemo_2eproto::offsets,
    file_level_metadata_struqt_2fdemo_2fv2_2fdemo_2eproto,
    file_level_enum_descriptors_struqt_2fdemo_2fv2_2fdemo_2eproto,
    file_level_service_descriptors_struqt_2fdemo_2fv2_2fdemo_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_getter() {
  return &descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_struqt_2fdemo_2fv2_2fdemo_2eproto(&descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto);
namespace struqt {
namespace demo {
namespace v2 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DemoOption_Command_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto);
  return file_level_enum_descriptors_struqt_2fdemo_2fv2_2fdemo_2eproto[0];
}
bool DemoOption_Command_IsValid(int value) {
  switch (value) {
    case 0:
    case 10111:
    case 10112:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr DemoOption_Command DemoOption::COMMAND_UNSPECIFIED;
constexpr DemoOption_Command DemoOption::COMMAND_SERVER_INFO_Q2S;
constexpr DemoOption_Command DemoOption::COMMAND_SERVER_INFO_R2C;
constexpr DemoOption_Command DemoOption::Command_MIN;
constexpr DemoOption_Command DemoOption::Command_MAX;
constexpr int DemoOption::Command_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class DemoOption::_Internal {
 public:
};

DemoOption::DemoOption(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:struqt.demo.v2.DemoOption)
}
DemoOption::DemoOption(const DemoOption& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DemoOption* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.handler_) {}

    , decltype(_impl_.uri_) {}

    , decltype(_impl_.retry_) {}

    , decltype(_impl_.query_) {}

    , decltype(_impl_.async_) {}

    , decltype(_impl_.timeout_) {}

    , decltype(_impl_.id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.handler_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.handler_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_handler().empty()) {
    _this->_impl_.handler_.Set(from._internal_handler(), _this->GetArenaForAllocation());
  }
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.uri_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uri().empty()) {
    _this->_impl_.uri_.Set(from._internal_uri(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.retry_, &from._impl_.retry_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.id_) -
    reinterpret_cast<char*>(&_impl_.retry_)) + sizeof(_impl_.id_));
  // @@protoc_insertion_point(copy_constructor:struqt.demo.v2.DemoOption)
}

inline void DemoOption::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.handler_) {}

    , decltype(_impl_.uri_) {}

    , decltype(_impl_.retry_) { 0 }

    , decltype(_impl_.query_) { false }

    , decltype(_impl_.async_) { false }

    , decltype(_impl_.timeout_) { 0 }

    , decltype(_impl_.id_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.handler_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.handler_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.uri_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DemoOption::~DemoOption() {
  // @@protoc_insertion_point(destructor:struqt.demo.v2.DemoOption)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DemoOption::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.handler_.Destroy();
  _impl_.uri_.Destroy();
}

void DemoOption::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DemoOption::Clear() {
// @@protoc_insertion_point(message_clear_start:struqt.demo.v2.DemoOption)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.handler_.ClearToEmpty();
  _impl_.uri_.ClearToEmpty();
  ::memset(&_impl_.retry_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.retry_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DemoOption::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool async = 999992;
      case 999992:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 192)) {
          _impl_.async_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 retry = 999993;
      case 999993:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 200)) {
          _impl_.retry_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool query = 999994;
      case 999994:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 208)) {
          _impl_.query_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 timeout = 999995;
      case 999995:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 216)) {
          _impl_.timeout_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string handler = 999997;
      case 999997:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 234)) {
          auto str = _internal_mutable_handler();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "struqt.demo.v2.DemoOption.handler"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string uri = 999998;
      case 999998:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 242)) {
          auto str = _internal_mutable_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "struqt.demo.v2.DemoOption.uri"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .struqt.demo.v2.DemoOption.Command id = 999999;
      case 999999:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 248)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_id(static_cast<::struqt::demo::v2::DemoOption_Command>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DemoOption::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:struqt.demo.v2.DemoOption)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool async = 999992;
  if (this->_internal_async() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        999992, this->_internal_async(), target);
  }

  // int32 retry = 999993;
  if (this->_internal_retry() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        999993, this->_internal_retry(), target);
  }

  // bool query = 999994;
  if (this->_internal_query() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        999994, this->_internal_query(), target);
  }

  // int32 timeout = 999995;
  if (this->_internal_timeout() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        999995, this->_internal_timeout(), target);
  }

  // string handler = 999997;
  if (!this->_internal_handler().empty()) {
    const std::string& _s = this->_internal_handler();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v2.DemoOption.handler");
    target = stream->WriteStringMaybeAliased(999997, _s, target);
  }

  // string uri = 999998;
  if (!this->_internal_uri().empty()) {
    const std::string& _s = this->_internal_uri();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v2.DemoOption.uri");
    target = stream->WriteStringMaybeAliased(999998, _s, target);
  }

  // .struqt.demo.v2.DemoOption.Command id = 999999;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        999999, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:struqt.demo.v2.DemoOption)
  return target;
}

::size_t DemoOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:struqt.demo.v2.DemoOption)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string handler = 999997;
  if (!this->_internal_handler().empty()) {
    total_size += 4 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_handler());
  }

  // string uri = 999998;
  if (!this->_internal_uri().empty()) {
    total_size += 4 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_uri());
  }

  // int32 retry = 999993;
  if (this->_internal_retry() != 0) {
    total_size += 4 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_retry());
  }

  // bool query = 999994;
  if (this->_internal_query() != 0) {
    total_size += 5;
  }

  // bool async = 999992;
  if (this->_internal_async() != 0) {
    total_size += 5;
  }

  // int32 timeout = 999995;
  if (this->_internal_timeout() != 0) {
    total_size += 4 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_timeout());
  }

  // .struqt.demo.v2.DemoOption.Command id = 999999;
  if (this->_internal_id() != 0) {
    total_size += 4 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DemoOption::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DemoOption::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DemoOption::GetClassData() const { return &_class_data_; }


void DemoOption::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DemoOption*>(&to_msg);
  auto& from = static_cast<const DemoOption&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:struqt.demo.v2.DemoOption)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_handler().empty()) {
    _this->_internal_set_handler(from._internal_handler());
  }
  if (!from._internal_uri().empty()) {
    _this->_internal_set_uri(from._internal_uri());
  }
  if (from._internal_retry() != 0) {
    _this->_internal_set_retry(from._internal_retry());
  }
  if (from._internal_query() != 0) {
    _this->_internal_set_query(from._internal_query());
  }
  if (from._internal_async() != 0) {
    _this->_internal_set_async(from._internal_async());
  }
  if (from._internal_timeout() != 0) {
    _this->_internal_set_timeout(from._internal_timeout());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DemoOption::CopyFrom(const DemoOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:struqt.demo.v2.DemoOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DemoOption::IsInitialized() const {
  return true;
}

void DemoOption::InternalSwap(DemoOption* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.handler_, lhs_arena,
                                       &other->_impl_.handler_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uri_, lhs_arena,
                                       &other->_impl_.uri_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DemoOption, _impl_.id_)
      + sizeof(DemoOption::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(DemoOption, _impl_.retry_)>(
          reinterpret_cast<char*>(&_impl_.retry_),
          reinterpret_cast<char*>(&other->_impl_.retry_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DemoOption::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv2_2fdemo_2eproto[0]);
}
// ===================================================================

class EchoRequest::_Internal {
 public:
};

EchoRequest::EchoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:struqt.demo.v2.EchoRequest)
}
EchoRequest::EchoRequest(const EchoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EchoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:struqt.demo.v2.EchoRequest)
}

inline void EchoRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.value_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EchoRequest::~EchoRequest() {
  // @@protoc_insertion_point(destructor:struqt.demo.v2.EchoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EchoRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.Destroy();
}

void EchoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EchoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:struqt.demo.v2.EchoRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EchoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "struqt.demo.v2.EchoRequest.value"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* EchoRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:struqt.demo.v2.EchoRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 2;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v2.EchoRequest.value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:struqt.demo.v2.EchoRequest)
  return target;
}

::size_t EchoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:struqt.demo.v2.EchoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EchoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EchoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EchoRequest::GetClassData() const { return &_class_data_; }


void EchoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EchoRequest*>(&to_msg);
  auto& from = static_cast<const EchoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:struqt.demo.v2.EchoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EchoRequest::CopyFrom(const EchoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:struqt.demo.v2.EchoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoRequest::IsInitialized() const {
  return true;
}

void EchoRequest::InternalSwap(EchoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata EchoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv2_2fdemo_2eproto[1]);
}
// ===================================================================

class EchoResponse::_Internal {
 public:
};

EchoResponse::EchoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:struqt.demo.v2.EchoResponse)
}
EchoResponse::EchoResponse(const EchoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EchoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_) {}

    , decltype(_impl_.version_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }
  _this->_impl_.version_ = from._impl_.version_;
  // @@protoc_insertion_point(copy_constructor:struqt.demo.v2.EchoResponse)
}

inline void EchoResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.value_) {}

    , decltype(_impl_.version_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EchoResponse::~EchoResponse() {
  // @@protoc_insertion_point(destructor:struqt.demo.v2.EchoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EchoResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.Destroy();
}

void EchoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EchoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:struqt.demo.v2.EchoResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  _impl_.version_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EchoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "struqt.demo.v2.EchoResponse.value"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* EchoResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:struqt.demo.v2.EchoResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_version(), target);
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v2.EchoResponse.value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:struqt.demo.v2.EchoResponse)
  return target;
}

::size_t EchoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:struqt.demo.v2.EchoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_value());
  }

  // int32 version = 1;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EchoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EchoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EchoResponse::GetClassData() const { return &_class_data_; }


void EchoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EchoResponse*>(&to_msg);
  auto& from = static_cast<const EchoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:struqt.demo.v2.EchoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EchoResponse::CopyFrom(const EchoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:struqt.demo.v2.EchoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoResponse::IsInitialized() const {
  return true;
}

void EchoResponse::InternalSwap(EchoResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);

  swap(_impl_.version_, other->_impl_.version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EchoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv2_2fdemo_2eproto[2]);
}
// ===================================================================

class JsonRpcRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<JsonRpcRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(JsonRpcRequest, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Value& params(const JsonRpcRequest* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Value& id(const JsonRpcRequest* msg);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Value&
JsonRpcRequest::_Internal::params(const JsonRpcRequest* msg) {
  return *msg->_impl_.params_;
}
const ::PROTOBUF_NAMESPACE_ID::Value&
JsonRpcRequest::_Internal::id(const JsonRpcRequest* msg) {
  return *msg->_impl_.id_;
}
void JsonRpcRequest::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void JsonRpcRequest::clear_id() {
  if (_impl_.id_ != nullptr) _impl_.id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
JsonRpcRequest::JsonRpcRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:struqt.demo.v2.JsonRpcRequest)
}
JsonRpcRequest::JsonRpcRequest(const JsonRpcRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JsonRpcRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.method_) {}

    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.id_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.method_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.method_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_method().empty()) {
    _this->_impl_.method_.Set(from._internal_method(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::PROTOBUF_NAMESPACE_ID::Value(*from._impl_.params_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.id_ = new ::PROTOBUF_NAMESPACE_ID::Value(*from._impl_.id_);
  }
  // @@protoc_insertion_point(copy_constructor:struqt.demo.v2.JsonRpcRequest)
}

inline void JsonRpcRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.method_) {}

    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.id_){nullptr}
  };
  _impl_.method_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.method_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

JsonRpcRequest::~JsonRpcRequest() {
  // @@protoc_insertion_point(destructor:struqt.demo.v2.JsonRpcRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JsonRpcRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.method_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
  if (this != internal_default_instance()) delete _impl_.id_;
}

void JsonRpcRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JsonRpcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:struqt.demo.v2.JsonRpcRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.method_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.params_ != nullptr);
      _impl_.params_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.id_ != nullptr);
      _impl_.id_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JsonRpcRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string method = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_method();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "struqt.demo.v2.JsonRpcRequest.method"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Value params = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Value id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_id(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* JsonRpcRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:struqt.demo.v2.JsonRpcRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 2;
  if (!this->_internal_method().empty()) {
    const std::string& _s = this->_internal_method();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v2.JsonRpcRequest.method");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Value params = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Value id = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::id(this),
        _Internal::id(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:struqt.demo.v2.JsonRpcRequest)
  return target;
}

::size_t JsonRpcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:struqt.demo.v2.JsonRpcRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string method = 2;
  if (!this->_internal_method().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_method());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Value params = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.params_);
    }

    // .google.protobuf.Value id = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.id_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JsonRpcRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JsonRpcRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JsonRpcRequest::GetClassData() const { return &_class_data_; }


void JsonRpcRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JsonRpcRequest*>(&to_msg);
  auto& from = static_cast<const JsonRpcRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:struqt.demo.v2.JsonRpcRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_method().empty()) {
    _this->_internal_set_method(from._internal_method());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_params()->::PROTOBUF_NAMESPACE_ID::Value::MergeFrom(
          from._internal_params());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_id()->::PROTOBUF_NAMESPACE_ID::Value::MergeFrom(
          from._internal_id());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JsonRpcRequest::CopyFrom(const JsonRpcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:struqt.demo.v2.JsonRpcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonRpcRequest::IsInitialized() const {
  return true;
}

void JsonRpcRequest::InternalSwap(JsonRpcRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.method_, lhs_arena,
                                       &other->_impl_.method_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JsonRpcRequest, _impl_.id_)
      + sizeof(JsonRpcRequest::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(JsonRpcRequest, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JsonRpcRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv2_2fdemo_2eproto[3]);
}
// ===================================================================

class JsonRpcErrorObject::_Internal {
 public:
  using HasBits = decltype(std::declval<JsonRpcErrorObject>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(JsonRpcErrorObject, _impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Value& data(const JsonRpcErrorObject* msg);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::struqt::common::v1::Dummy& v1d(const JsonRpcErrorObject* msg);
  static void set_has_v1d(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Value&
JsonRpcErrorObject::_Internal::data(const JsonRpcErrorObject* msg) {
  return *msg->_impl_.data_;
}
const ::struqt::common::v1::Dummy&
JsonRpcErrorObject::_Internal::v1d(const JsonRpcErrorObject* msg) {
  return *msg->_impl_.v1d_;
}
void JsonRpcErrorObject::clear_data() {
  if (_impl_.data_ != nullptr) _impl_.data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void JsonRpcErrorObject::clear_v1d() {
  if (_impl_.v1d_ != nullptr) _impl_.v1d_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
JsonRpcErrorObject::JsonRpcErrorObject(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:struqt.demo.v2.JsonRpcErrorObject)
}
JsonRpcErrorObject::JsonRpcErrorObject(const JsonRpcErrorObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JsonRpcErrorObject* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_) {}

    , decltype(_impl_.data_){nullptr}
    , decltype(_impl_.v1d_){nullptr}
    , decltype(_impl_.code_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_ = new ::PROTOBUF_NAMESPACE_ID::Value(*from._impl_.data_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.v1d_ = new ::struqt::common::v1::Dummy(*from._impl_.v1d_);
  }
  _this->_impl_.code_ = from._impl_.code_;
  // @@protoc_insertion_point(copy_constructor:struqt.demo.v2.JsonRpcErrorObject)
}

inline void JsonRpcErrorObject::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_) {}

    , decltype(_impl_.data_){nullptr}
    , decltype(_impl_.v1d_){nullptr}
    , decltype(_impl_.code_) { 0 }

  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

JsonRpcErrorObject::~JsonRpcErrorObject() {
  // @@protoc_insertion_point(destructor:struqt.demo.v2.JsonRpcErrorObject)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JsonRpcErrorObject::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.data_;
  if (this != internal_default_instance()) delete _impl_.v1d_;
}

void JsonRpcErrorObject::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JsonRpcErrorObject::Clear() {
// @@protoc_insertion_point(message_clear_start:struqt.demo.v2.JsonRpcErrorObject)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.data_ != nullptr);
      _impl_.data_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.v1d_ != nullptr);
      _impl_.v1d_->Clear();
    }
  }
  _impl_.code_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JsonRpcErrorObject::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "struqt.demo.v2.JsonRpcErrorObject.message"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Value data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .struqt.common.v1.Dummy v1d = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_v1d(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* JsonRpcErrorObject::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:struqt.demo.v2.JsonRpcErrorObject)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_code(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "struqt.demo.v2.JsonRpcErrorObject.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Value data = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  // .struqt.common.v1.Dummy v1d = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::v1d(this),
        _Internal::v1d(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:struqt.demo.v2.JsonRpcErrorObject)
  return target;
}

::size_t JsonRpcErrorObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:struqt.demo.v2.JsonRpcErrorObject)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Value data = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.data_);
    }

    // .struqt.common.v1.Dummy v1d = 10;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.v1d_);
    }

  }
  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JsonRpcErrorObject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JsonRpcErrorObject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JsonRpcErrorObject::GetClassData() const { return &_class_data_; }


void JsonRpcErrorObject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JsonRpcErrorObject*>(&to_msg);
  auto& from = static_cast<const JsonRpcErrorObject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:struqt.demo.v2.JsonRpcErrorObject)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_data()->::PROTOBUF_NAMESPACE_ID::Value::MergeFrom(
          from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_v1d()->::struqt::common::v1::Dummy::MergeFrom(
          from._internal_v1d());
    }
  }
  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JsonRpcErrorObject::CopyFrom(const JsonRpcErrorObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:struqt.demo.v2.JsonRpcErrorObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonRpcErrorObject::IsInitialized() const {
  return true;
}

void JsonRpcErrorObject::InternalSwap(JsonRpcErrorObject* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, lhs_arena,
                                       &other->_impl_.message_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JsonRpcErrorObject, _impl_.code_)
      + sizeof(JsonRpcErrorObject::_impl_.code_)
      - PROTOBUF_FIELD_OFFSET(JsonRpcErrorObject, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JsonRpcErrorObject::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv2_2fdemo_2eproto[4]);
}
// ===================================================================

class JsonRpcResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<JsonRpcResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(JsonRpcResponse, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::struqt::demo::v2::JsonRpcResponse, _impl_._oneof_case_);
  static const ::PROTOBUF_NAMESPACE_ID::Value& result(const JsonRpcResponse* msg);
  static const ::struqt::demo::v2::JsonRpcErrorObject& error(const JsonRpcResponse* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Value& id(const JsonRpcResponse* msg);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Value&
JsonRpcResponse::_Internal::result(const JsonRpcResponse* msg) {
  return *msg->_impl_.one_of_.result_;
}
const ::struqt::demo::v2::JsonRpcErrorObject&
JsonRpcResponse::_Internal::error(const JsonRpcResponse* msg) {
  return *msg->_impl_.one_of_.error_;
}
const ::PROTOBUF_NAMESPACE_ID::Value&
JsonRpcResponse::_Internal::id(const JsonRpcResponse* msg) {
  return *msg->_impl_.id_;
}
void JsonRpcResponse::set_allocated_result(::PROTOBUF_NAMESPACE_ID::Value* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_one_of();
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result));
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    set_has_result();
    _impl_.one_of_.result_ = result;
  }
  // @@protoc_insertion_point(field_set_allocated:struqt.demo.v2.JsonRpcResponse.result)
}
void JsonRpcResponse::clear_result() {
  if (one_of_case() == kResult) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.one_of_.result_;
    }
    clear_has_one_of();
  }
}
void JsonRpcResponse::set_allocated_error(::struqt::demo::v2::JsonRpcErrorObject* error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_one_of();
  if (error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(error);
    if (message_arena != submessage_arena) {
      error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    _impl_.one_of_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:struqt.demo.v2.JsonRpcResponse.error)
}
void JsonRpcResponse::clear_id() {
  if (_impl_.id_ != nullptr) _impl_.id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
JsonRpcResponse::JsonRpcResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:struqt.demo.v2.JsonRpcResponse)
}
JsonRpcResponse::JsonRpcResponse(const JsonRpcResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JsonRpcResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.id_){nullptr}
    , decltype(_impl_.one_of_){}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.id_ = new ::PROTOBUF_NAMESPACE_ID::Value(*from._impl_.id_);
  }
  clear_has_one_of();
  switch (from.one_of_case()) {
    case kResult: {
      _this->_internal_mutable_result()->::PROTOBUF_NAMESPACE_ID::Value::MergeFrom(
          from._internal_result());
      break;
    }
    case kError: {
      _this->_internal_mutable_error()->::struqt::demo::v2::JsonRpcErrorObject::MergeFrom(
          from._internal_error());
      break;
    }
    case ONE_OF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:struqt.demo.v2.JsonRpcResponse)
}

inline void JsonRpcResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.id_){nullptr}
    , decltype(_impl_.one_of_){}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_one_of();
}

JsonRpcResponse::~JsonRpcResponse() {
  // @@protoc_insertion_point(destructor:struqt.demo.v2.JsonRpcResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JsonRpcResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.id_;
  if (has_one_of()) {
    clear_one_of();
  }
}

void JsonRpcResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JsonRpcResponse::clear_one_of() {
// @@protoc_insertion_point(one_of_clear_start:struqt.demo.v2.JsonRpcResponse)
  switch (one_of_case()) {
    case kResult: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.one_of_.result_;
      }
      break;
    }
    case kError: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.one_of_.error_;
      }
      break;
    }
    case ONE_OF_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ONE_OF_NOT_SET;
}


void JsonRpcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:struqt.demo.v2.JsonRpcResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.id_ != nullptr);
    _impl_.id_->Clear();
  }
  clear_one_of();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JsonRpcResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Value result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .struqt.demo.v2.JsonRpcErrorObject error = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .google.protobuf.Value id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_id(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* JsonRpcResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:struqt.demo.v2.JsonRpcResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (one_of_case()) {
    case kResult: {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, _Internal::result(this),
          _Internal::result(this).GetCachedSize(), target, stream);
      break;
    }
    case kError: {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, _Internal::error(this),
          _Internal::error(this).GetCachedSize(), target, stream);
      break;
    }
    default: ;
  }
  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Value id = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::id(this),
        _Internal::id(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:struqt.demo.v2.JsonRpcResponse)
  return target;
}

::size_t JsonRpcResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:struqt.demo.v2.JsonRpcResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Value id = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.id_);
  }

  switch (one_of_case()) {
    // .google.protobuf.Value result = 2;
    case kResult: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.one_of_.result_);
      break;
    }
    // .struqt.demo.v2.JsonRpcErrorObject error = 3;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.one_of_.error_);
      break;
    }
    case ONE_OF_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JsonRpcResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JsonRpcResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JsonRpcResponse::GetClassData() const { return &_class_data_; }


void JsonRpcResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JsonRpcResponse*>(&to_msg);
  auto& from = static_cast<const JsonRpcResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:struqt.demo.v2.JsonRpcResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_id()->::PROTOBUF_NAMESPACE_ID::Value::MergeFrom(
        from._internal_id());
  }
  switch (from.one_of_case()) {
    case kResult: {
      _this->_internal_mutable_result()->::PROTOBUF_NAMESPACE_ID::Value::MergeFrom(
          from._internal_result());
      break;
    }
    case kError: {
      _this->_internal_mutable_error()->::struqt::demo::v2::JsonRpcErrorObject::MergeFrom(
          from._internal_error());
      break;
    }
    case ONE_OF_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JsonRpcResponse::CopyFrom(const JsonRpcResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:struqt.demo.v2.JsonRpcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonRpcResponse::IsInitialized() const {
  return true;
}

void JsonRpcResponse::InternalSwap(JsonRpcResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.id_, other->_impl_.id_);
  swap(_impl_.one_of_, other->_impl_.one_of_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata JsonRpcResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_getter, &descriptor_table_struqt_2fdemo_2fv2_2fdemo_2eproto_once,
      file_level_metadata_struqt_2fdemo_2fv2_2fdemo_2eproto[5]);
}
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::struqt::demo::v2::DemoOption >, 11, false>
  command(kCommandFieldNumber, ::struqt::demo::v2::DemoOption::default_instance(), nullptr);
// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace demo
}  // namespace struqt
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::struqt::demo::v2::DemoOption*
Arena::CreateMaybeMessage< ::struqt::demo::v2::DemoOption >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v2::DemoOption >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v2::EchoRequest*
Arena::CreateMaybeMessage< ::struqt::demo::v2::EchoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v2::EchoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v2::EchoResponse*
Arena::CreateMaybeMessage< ::struqt::demo::v2::EchoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v2::EchoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v2::JsonRpcRequest*
Arena::CreateMaybeMessage< ::struqt::demo::v2::JsonRpcRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v2::JsonRpcRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v2::JsonRpcErrorObject*
Arena::CreateMaybeMessage< ::struqt::demo::v2::JsonRpcErrorObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v2::JsonRpcErrorObject >(arena);
}
template<> PROTOBUF_NOINLINE ::struqt::demo::v2::JsonRpcResponse*
Arena::CreateMaybeMessage< ::struqt::demo::v2::JsonRpcResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::struqt::demo::v2::JsonRpcResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
