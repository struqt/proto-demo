name: Protoc Gen

on:
  push: { branches: [ "proto" ] }
  pull_request: { branches: [ "proto" ] }

jobs:
  generate:
    strategy:
      matrix:
        grpc_version: [ 1.61 ]
        build_type: [ Release ]
        os: [ ubuntu-latest ]
      fail-fast: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with: { submodules: true }
      - run: git submodule update --recursive --remote
        shell: bash
      - uses: bufbuild/buf-setup-action@v1
      - uses: bufbuild/buf-lint-action@v1

      - name: Setup gRPC
        id: cache-grpc
        uses: actions/cache@v3
        env:
          cache-name: gRPC${{ matrix.grpc_version }}
        with:
          path: |
            ${{ github.workspace }}/third-party/grpc
            ${{ github.workspace }}/third-party/build
          key: ${{ env.cache-name }} ${{ runner.os }} ${{ runner.arch }} ${{ matrix.build_type }}

      - name: Setup Go
        uses: actions/setup-go@v3
        with: { go-version: 1.19 }

      - name: Generate
        if: steps.cache-grpc.outputs.cache-hit == 'true'
        run: bash ${{ github.workspace }}/protoc-gen.sh
        shell: bash

      - name: Validate Go Build
        working-directory: ${{ github.workspace }}/demo-go
        run: |
          mkdir -p .go/bin 
          pushd .go/bin
          go build -v ../../server/cmd/demo-grpc
          go build -v ../../server/cmd/demo-gate
          go build -v ../../server/cmd/demo
          ls -lhA
          popd

      - name: Validate CMake Build
        if: steps.cache-grpc.outputs.cache-hit == 'true'
        working-directory: ${{ github.workspace }}/demo-cxx
        run: |
          cmake -B ./build -D CMAKE_BUILD_TYPE=${{ matrix.build_type }}
          cmake --build ./build  -j 6 --config ${{ matrix.build_type }}

      - name: Git Commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_author: 'wkang[bot] <wkang2015@163.com>'
          commit_message: '[bot-commit] Code Generation'
  #generate
#jobs
