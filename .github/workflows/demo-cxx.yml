name: -c++

on:
  workflow_call:
    inputs:
      safe-checkout:
        required: true
        description: "The SHA key for the commit we want to run over"
        type: string
  #workflow_call
#on

env:
  PROJECT_NAME: demo-cxx

jobs:
  build:
    strategy:
      matrix:
        grpc_version: [
          1.55,
          1.56,
        ]
        build_type: [
          Release,
        ]
        os: [
          ubuntu-latest,
        ]
      fail-fast: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.safe-checkout }}
          submodules: 'true'

      - name: gRPC Cache
        id: cache-grpc
        uses: actions/cache@v3
        env:
          cache-name: gRPC${{ matrix.grpc_version }}
        with:
          path: ${{ github.workspace }}/third-party
          key: ${{ env.cache-name }} ${{ runner.os }} ${{ runner.arch }} ${{ matrix.build_type }}

      - name: CMake
        if: steps.cache-grpc.outputs.cache-hit == 'true'
        working-directory: ${{ github.workspace }}/demo-cxx
        run: cmake -B ${{ github.workspace }}/demo-cxx-build -D CMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: CMake Build
        if: steps.cache-grpc.outputs.cache-hit == 'true'
        working-directory: ${{ github.workspace }}/demo-cxx
        run: cmake --build ${{ github.workspace }}/demo-cxx-build -j 6 --config ${{ matrix.build_type }}

      - name: Test
        if: steps.cache-grpc.outputs.cache-hit == 'true'
        working-directory: ${{ github.workspace }}/demo-cxx-build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: |
          ctest -C ${{ matrix.build_type }}

      - name: Upload demo_cxx_hello
        uses: actions/upload-artifact@v3
        with:
          retention-days: 10
          name: demo_cxx_hello-gRPC${{ matrix.grpc_version }}-${{ runner.os }}-${{ runner.arch }}
          path: ${{ github.workspace }}/demo-cxx-build/demo_cxx_hello

      - name: Upload demo_cxx_server
        uses: actions/upload-artifact@v3
        with:
          retention-days: 10
          name: demo_cxx_server-gRPC${{ matrix.grpc_version }}-${{ runner.os }}-${{ runner.arch }}
          path: ${{ github.workspace }}/demo-cxx-build/demo_cxx_server
    #steps
  #build
  test:
    needs: build
    strategy:
      matrix:
        grpc_version: [
          1.55,
          1.56,
        ]
        build_type: [
          Release,
        ]
        os: [
          ubuntu-latest,
        ]
      fail-fast: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download demo_cxx_hello
        uses: actions/download-artifact@v3
        with:
          name: demo_cxx_hello-gRPC${{ matrix.grpc_version }}-${{ runner.os }}-${{ runner.arch }}
      - name: Test demo_cxx_hello
        run: |
          ls -lAh
          if command -v ldd &>/dev/null; then
            echo '## ldd demo_cxx_hello'
            ldd demo_cxx_hello
          fi
          chmod u+x demo_cxx_hello
          ./demo_cxx_hello
        shell: bash
    #steps
  #test
#jobs
